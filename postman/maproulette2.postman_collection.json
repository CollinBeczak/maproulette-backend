{
	"info": {
		"_postman_id": "fe39a97c-9c4d-484f-bc2d-12b22ab895ce",
		"name": "maproulette2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "challenge",
			"item": [
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"id": "2a91661f-5842-4113-8de4-98a0889832d0"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a9bc2f5-2b3d-47e8-a3d9-1416754fb66c",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID2\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject2\";",
									"tests[\"description\"] = jsonData.description === \"Test project just to test moving challenges.\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject2\",\n    \"description\":\"Test project just to test moving challenges.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f38c5f2-838a-4d58-a9e4-f895de7df6e0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple challenge\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Move",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fec6077-0237-44ee-a12b-75c8cd7c0d38",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"parent\"] = jsonData.parent == postman.getGlobalVariable(\"SimpleProjectID2\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}/project/{{SimpleProjectID2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}",
								"project",
								"{{SimpleProjectID2}}"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "69e0b4b9-b79d-480a-b943-b25f9125f0fb"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Retrieved Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e92d88-56f4-4a5e-8cf6-9c1be1c46a6e",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge\";",
									"tests[\"deleted\"] = jsonData.deleted === true;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Immediate Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "bd04c3a7-ae86-4911-ad3c-46fb59961a66"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e37adc8-b3ac-4222-9675-89542ab20abc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TagsChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and two tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple tag challenge\",\n    \"enabled\":false,\n    \"tags\":\"tag1,tag2\",\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cf122e8-0853-41ba-aecd-d8b32b244789",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "535b6149-f433-46d3-b54f-d3fceb951ad0",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"postman.setGlobalVariable(\"TagsChallengeTask1ID\", jsonData[0].id);",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";",
									"postman.setGlobalVariable(\"TagsChallengeTask2ID\", jsonData[1].id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Random Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1de25ffd-011d-463a-9407-58ad51f30de5",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"if (jsonData[0].name == \"Task 1\") {",
									"    var id = pm.globals.get(\"TagsChallengeTask1ID\");    ",
									"} else {",
									"    var id = pm.globals.get(\"TagsChallengeTask2ID\");",
									"}",
									"tests[\"IDValidation\"] = jsonData[0].id == id;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks/random",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks",
								"random"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Next Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a567cf41-624a-4b76-997e-07b473b7ec49",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Task 2\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/nextTask/{{TagsChallengeTask1ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"nextTask",
								"{{TagsChallengeTask1ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Previous Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b8ff3da-4d29-44a1-9b0d-9a22d58f9cf7",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Task 1\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/previousTask/{{TagsChallengeTask2ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"previousTask",
								"{{TagsChallengeTask2ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks Batch Upload",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8e5d353-d829-4cff-8dc6-ec25c5423d4a",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Task 3\",\n        \"description\":\"Task 3 description\",\n        \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n    },\n    {\n        \"name\":\"Task 4\",\n        \"description\":\"Task 4 description\",\n        \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[93,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[93.1,1.6]},\"properties\":{}}]}\n    }\n]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Batch Upload two tasks to the challenge"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks Take 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";",
									"tests[\"Task3\"] = jsonData[2].name === \"Task 3\";",
									"tests[\"Task4\"] = jsonData[3].name === \"Task 4\";"
								],
								"id": "794af69b-5829-4b6e-979d-53bb51f4fe0b"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Nearby Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f32ccd4-7763-4f08-9fb3-b773be551817",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Task 2\");",
									"    pm.expect(pm.response.text()).to.include(\"Task 3\");",
									"    pm.expect(pm.response.text()).to.not.include(\"Task 4\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasksNearby/{{TagsChallengeTask1ID}}?limit=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasksNearby",
								"{{TagsChallengeTask1ID}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge GetTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70cdc22c-5742-470e-93c6-2828fe554ba0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tag1\"] = jsonData[0].name === \"tag1\" || jsonData[0].name === \"tag2\"",
									"tests[\"tag2\"] = jsonData[1].name === \"tag2\" || jsonData[1].name === \"tag1\""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge DisassociateTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 204\"] = responseCode.code === 204;"
								],
								"id": "dfc01b90-8f03-46a5-b3bb-e5f7b8dfa769"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags?tags=tag1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							],
							"query": [
								{
									"key": "tags",
									"value": "tag1"
								}
							]
						},
						"description": "Disassociates the tags from the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge GetTags afterDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tag1\"] = jsonData[0].name === \"tag2\""
								],
								"id": "803bbc9d-7cbb-4235-a2f3-41712b3abe0f"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03143b99-96c8-41fd-a718-aca0fc4dfa5f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"Updated challenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Updated challenge description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Updates the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "TagChallenge Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "1360341f-9f6e-4bfc-a5e3-986a4ef739a1"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the Tag challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Task Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e2c54f7-f6a2-46b1-9324-18889a2dc3cf",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TagsTaskChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TaskTagsChallenge\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TaskTagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and task tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple task tag challenge\",\n    \"enabled\":false,\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]},\n            \"tags\":\"taskTag1,taskTag2\"\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]},\n            \"tags\":\"taskTag3\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Task Get Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f35cfee7-a355-413c-8e12-3673b9f2b16e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"tasktag1\");",
									"    pm.expect(pm.response.text()).to.include(\"tasktag2\");",
									"    pm.expect(pm.response.text()).to.include(\"tasktag3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/keywords?tagType=tasks&limit=1000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keywords"
							],
							"query": [
								{
									"key": "tagType",
									"value": "tasks"
								},
								{
									"key": "limit",
									"value": "1000"
								}
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Task Tag Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ca8a48f-cec4-4c5e-9cff-acf97337010c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsTaskChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsTaskChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the Tag challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "e58f923f-63f8-435f-842b-6e6ec5e3b6d4"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				},
				{
					"name": "Challenge Project 2 Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "d1f7ea65-3650-4b31-8ae8-12f2d4a5baee"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID2}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID2}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "task",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"id": "a33b1971-9efd-45b2-a4ed-0f51b2ae91bc"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dca70b72-9536-4165-92a3-f9d050f79304",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestChallenge\",\n    \"parent\": {{TestProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test1\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\", \"version\": 1}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Tasks in Bounding Box",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29a35e8f-b055-4dc3-b6da-d8e38a784f39",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Task 1\");",
									"    pm.expect(pm.response.text()).to.include(\"Task 2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"taskPropertySearch\": {\n\t\t\"operationType\": \"or\",\n\t\t\"left\": {\n\t\t\t\"key\": \"id\",\n\t\t\t\"value\": \"test1\",\n\t\t\t\"valueType\": \"string\",\n\t\t\t\"searchType\": \"equals\"\n\t\t},\n\t\t\"right\": {\n\t\t\t\"operationType\": \"and\",\n\t\t\t\"left\": {\n\t\t\t\t\"key\": \"id\",\n\t\t\t\t\"value\": \"test2\",\n\t\t\t\t\"valueType\": \"string\",\n\t\t\t\t\"searchType\": \"contains\"\n\t\t\t},\n\t\t\t\"right\": {\n\t\t\t\t\"key\": \"version\",\n\t\t\t\t\"value\": \"0\",\n\t\t\t\t\"valueType\": \"number\",\n\t\t\t\t\"searchType\": \"greater_than\"\n\t\t\t}\n\t\t}\n\t}\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/box/-180/-90/180/90?cid={{TestChallenge}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"box",
								"-180",
								"-90",
								"180",
								"90"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Bulk Change Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0a27f3a-4b45-41ee-b56c-96ea5ec11ed6",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"taskPropertySearch\": {\n\t\t\"operationType\": \"or\",\n\t\t\"left\": {\n\t\t\t\"key\": \"id\",\n\t\t\t\"value\": \"test1\",\n\t\t\t\"valueType\": \"string\",\n\t\t\t\"searchType\": \"equals\"\n\t\t},\n\t\t\"right\": {\n\t\t\t\"operationType\": \"and\",\n\t\t\t\"left\": {\n\t\t\t\t\"key\": \"id\",\n\t\t\t\t\"value\": \"test2\",\n\t\t\t\t\"valueType\": \"string\",\n\t\t\t\t\"searchType\": \"contains\"\n\t\t\t},\n\t\t\t\"right\": {\n\t\t\t\t\"key\": \"version\",\n\t\t\t\t\"value\": \"0\",\n\t\t\t\t\"valueType\": \"number\",\n\t\t\t\t\"searchType\": \"greater_than\"\n\t\t\t}\n\t\t}\n\t}\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/changeStatus?cid={{TestChallenge}}&tbb=-180,-90,180,90&newStatus=2&tStatus=-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"changeStatus"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "tbb",
									"value": "-180,-90,180,90"
								},
								{
									"key": "newStatus",
									"value": "2"
								},
								{
									"key": "tStatus",
									"value": "-1"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Delete All Task Challenges",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "664bea2a-b7fe-436d-ad5c-234f3454c0ad",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TestChallenge}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TestChallenge}}",
								"tasks"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Check Tasks Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fcb10290-bc01-4bb6-bb0e-cd8a28d109b0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TestChallenge}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TestChallenge}}",
								"tasks"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "fb046b99-11c7-438d-ab3e-ab1468407493"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "89b4a5f9-f887-40ee-8bc6-0eddaea6432f"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Start Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a08f1f74-a8ba-46db-9e18-40d84132730e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Refresh Task Lock",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1792b3da-07c1-441c-bea7-3d0d7a25a264",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cad834e-1cba-4bdc-888a-b96398beee9d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask Tags - Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76eedb50-6c37-46dc-a43d-81d635603346",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\"newupdatetasktag\", \"taskTag2\"]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask - No Tags (remain unchanged)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ea37fe2-19db-424d-8b44-9b0514c33b84",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE2\";",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9708400-c7c8-4261-9291-7939f4729b49",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tagname1\"] = jsonData[0].name === \"newupdatetasktag\" || jsonData[0].name === \"tasktag2\";",
									"tests[\"tagname2\"] = jsonData[1].name === \"newupdatetasktag\" || jsonData[1].name === \"tasktag2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"tags"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask - Delete all Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8166ac82-a484-4c21-9973-e08012c5cc52",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE2\";",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task Tags Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "345ecf17-bb23-4ead-a99a-5a1d1bcbca05",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tagname1\"] = jsonData[0].name === \"newupdatetasktag\" || jsonData[0].name === \"tasktag2\";",
									"tests[\"tagname2\"] = jsonData[1].name === \"newupdatetasktag\" || jsonData[1].name === \"tasktag2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"tags"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Add 1st Task Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewComment\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"comment\"] = jsonData.comment === \"This is a comment\";"
								],
								"id": "3bef9dbb-bb10-47de-9b34-04f13778882c"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment?comment=This%20is%20a%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Update 1st Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"comment\"] = jsonData.comment === \"This is an updated comment\";"
								],
								"id": "10cf9a24-c4ff-42d8-836c-faa6facc2f3b"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/comment/{{NewComment}}?comment=This%20is%20an%20updated%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"comment",
								"{{NewComment}}"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20an%20updated%20comment"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Add 2nd Task Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"comment\"] = jsonData.comment === \"This is a comment Number2\";"
								],
								"id": "9d2838f0-37ca-41cd-9fca-2b0ca1dfa5f6"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment?comment=This%20is%20a%20comment%20Number2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment%20Number2"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Retrieve Single Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"comment\"] = jsonData.comment === \"This is an updated comment\";"
								],
								"id": "88295d97-f163-4513-8912-7cc104fb105f"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/comment/{{NewComment}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"comment",
								"{{NewComment}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Retrieve All Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Comment1\"] = jsonData.length == 2;"
								],
								"id": "911714f4-ae84-4032-9866-bad55c3302c7"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comments"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"id": "093d8f02-22fb-4e5c-b7af-b8cca6f643be"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment/{{NewComment}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment",
								"{{NewComment}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Release Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0f05af3-2f1c-4ac2-a463-d951ea6fbe88",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task withTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08d76cb9-3d66-4653-af63-bb5c891400c0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask With Tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask With Tags\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]},\n    \"tags\":\"newtaskTag1, newtaskTag2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Task Tags Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76f98fcf-04b5-4514-88e2-a94a07f0aba6",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"newtasktag1\");",
									"    pm.expect(pm.response.text()).to.include(\"newtasktag2\");",
									"    pm.expect(pm.response.text()).to.include(\"newupdatetasktag\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/keywords?tagType=tasks&limit=1000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keywords"
							],
							"query": [
								{
									"key": "tagType",
									"value": "tasks"
								},
								{
									"key": "limit",
									"value": "1000"
								}
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Task Tags Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "626394f8-4ac5-47ea-b4bb-ed9cbbda897e",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sometag1\");",
									"    pm.expect(pm.response.text()).to.include(\"sometag2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/tags/update?tags=sometag1,sometag2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"tags",
								"update"
							],
							"query": [
								{
									"key": "tags",
									"value": "sometag1,sometag2"
								}
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Read Task Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94a7a309-e77f-447b-9121-6d0429e4b6a8",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sometag1\");",
									"    pm.expect(pm.response.text()).to.include(\"sometag2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"tags"
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "8e1a40de-ae8c-41e1-91ff-01cae625028c"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "TaskReview",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"id": "151f7ab6-06e1-4fb2-a157-c485b24a8430"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "beb3e4bc-0578-48ea-a9d4-6dd765ce63d3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestChallenge\",\n    \"parent\": {{TestProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test1\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\", \"version\": 1}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "9d78af29-d1d5-4711-bf18-b336c0bdbad6"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "SetTaskStatus w/review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c23ad00-9152-4901-8baf-748898518097",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/1?requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"1"
							],
							"query": [
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "901ff811-f0c4-4206-a538-0ee6a08c8993",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"status\"] = jsonData.status === 1;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 0;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Review Requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38959416-6269-4acc-808a-02423c3fb295",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"no tasks to be returned\"] = jsonData.total === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/review?cid={{TestChallenge}}&trStatus=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"review"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "0"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "SetTaskReviewStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dbfc47ce-7d54-4bfa-ad61-f66c6cafbadc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/review/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"review",
								"1"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task After Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e48fb1ba-dc4b-47a0-989a-64d6cdacfb98",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"status\"] = jsonData.status === 1;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 1;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bde9d121-e386-405b-9ab2-100879fd1c54",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"no tasks to be returned\"] = jsonData.total === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&trStatus=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "1"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Reviews (inverted)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6fe84885-e0fe-4390-ad39-da77837f1baf",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one tasks to be returned\"] = jsonData.total === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&trStatus=1&invf=trStatus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "1"
								},
								{
									"key": "invf",
									"value": "trStatus"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "00508854-8850-4667-b921-4b4c4f447164"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VirtualChallenge",
			"item": [
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcc397a4-7f01-4d02-bebc-d3b4cf373148",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1117fb10-95a1-4d11-ae42-b040e01612a2",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"TagsChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and two tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple tag challenge\",\n    \"enabled\":false,\n    \"tags\":\"tag1,tag2\",\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad79b3b5-4180-4760-8193-e5c1d21c0532",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";"
								],
								"id": "fc241772-8f20-425d-856d-cedb4557bd75"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f3080c2-aa33-49d1-b010-f55610634356",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"test\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"location\": {\n      \"left\":102,\n      \"bottom\":0,\n      \"right\":104,\n      \"top\":2\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6d37897-8179-46bb-b101-f63d4bc243fc",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Read By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2634624-0e08-4568-9163-b110f09776d7",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallengebyname/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallengebyname",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7aa8ee93-f2b4-4db1-9246-dba2956d3fcd",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"testUpdate\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"testUpdate\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0cef466c-7129-4d85-b67a-24cfbf891639",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData[0].name === \"testUpdate\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Task List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2338543-10c6-46a6-b2c3-a9827e29ce71",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"size\"] = jsonData.length === 2;",
									"pm.globals.set(\"VChallengeTask1ID\", jsonData[0].id);",
									"pm.globals.set(\"VChallengeTask2ID\", jsonData[1].id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Random Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd24ded3-114f-43d6-b21e-f25131b71c6c",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Next Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ebd16c5-2748-42b4-8282-11cf53680a9c",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"id\"] = jsonData.id == pm.globals.get(\"VChallengeTask2ID\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/nextTask/{{VChallengeTask1ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"nextTask",
								"{{VChallengeTask1ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Previous Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21e5e8cc-b6ca-4488-ad25-92447d63d3e9",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"id\"] = jsonData.id == pm.globals.get(\"VChallengeTask1ID\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/previousTask/{{VChallengeTask2ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"previousTask",
								"{{VChallengeTask2ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Nearby Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23dd894c-c1c7-47d5-b67b-c744fa723c29",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Nearby Task 1\"] = jsonData.length > 0 && (jsonData[0].name === \"Task 1\" || jsonData[0].name === \"Task 2\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/tasksNearby/{{VChallengeTask2ID}}?limit=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"tasksNearby",
								"{{VChallengeTask2ID}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge GeoJSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e8bf3f2-4e2a-4411-8268-298d7ae08b35",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/view/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"view",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Clustered Points",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f8eb7e7-8390-4d0c-8d7d-68dc7dc44a74",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/clustered/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"clustered",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "188702ce-f122-4f28-a996-235ce761b5c7",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation ID List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "786cd864-3be0-4a9d-9e81-46a660dece51",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeIDList\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"testVCList\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"testVCList\",\n  \"taskIdList\":[{{VChallengeTask1ID}}, {{VChallengeTask2ID}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge ID Task List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "22ba221c-f09a-460f-89c1-15fd3ebb5172",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"size\"] = jsonData.length === 2;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeIDList}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeIDList}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Delete ID List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81294983-4b39-4c0c-b7dd-d96beb611e82",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeIDList}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeIDList}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation Expiry",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6fdad0ca-8aec-4fc1-b9b0-0053297e96d2",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"test\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"location\": {\n      \"left\":102,\n      \"bottom\":0,\n      \"right\":104,\n      \"top\":2\n    }\n  },\n  \"expiry\":\"1 s\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Expiry Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a08c0fce-bd1b-4ad2-afe7-ee4b3717a346",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 404\"] = responseCode.code === 404;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation w/Boundings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9092c47c-06e2-4337-9577-c3bea3ba8390",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"testBoundingGeos1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"testBoundingGeos1\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"boundingGeometries\": [\n    \t{\"bounding\": {\n    \t\t\"type\":\"Polygon\",\n    \t\t\"coordinates\":[[[100,0],[100,3],[105,3],[105,0],[100,0]]]\n    \t}},\n    \t{\"bounding\": {\n    \t\t\"type\":\"Polygon\",\n    \t\t\"coordinates\":[[[1,1],[1,2],[2,2],[2,1],[1,1]]]\n    \t}}\n    ]\n  }\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "0433c75a-924b-47f9-b952-1355979b6794"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "data",
			"item": [
				{
					"name": "ChallengeSummary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/challenge/8953?priority=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"challenge",
								"8953"
							],
							"query": [
								{
									"key": "priority",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "project",
			"item": [
				{
					"name": "Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1dba463-5293-45f0-95a5-822055c2f749",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Project Creation With Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a81d4983-72f7-45e6-830a-b516ebcbb5b9",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"ProjectWithChildren\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"ProjectWithChildren\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing 2 children.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"ProjectWithChildren\",\n    \"description\":\"Test project containing 2 children.\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Project Children Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59fd33db-bf32-470a-8544-a7e98a3ad190",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \t\"parent\": {{ProjectWithChildren}},\n        \"name\":\"Challenge1 Child\",\n        \"description\":\"Challenge1 Child description\",\n        \"instruction\":\"Challenge1 Child instruction\",\n        \"children\":[\n            {\n                \"name\":\"Task 1\",\n                \"description\":\"Task 1 description\",\n                \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n            },\n            {\n                \"name\":\"Task 2\",\n                \"description\":\"Task 2 description\",\n                \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n            }\n        ]\n    },\n    {\n    \t\"parent\": {{ProjectWithChildren}},\n        \"name\":\"Challenge2 Child\",\n        \"description\":\"Challenge2 Child description\",\n        \"instruction\":\"Challenge2 Child instruction\"\n    }\n]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenges"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76b6ebaa-121a-4cf1-84f2-413d84f0ae24",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Expected Children count\"] = jsonData.length === 0"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Children 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49474cd8-605e-4eb2-96ef-c036724e9e16",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Expected Children count\"] = jsonData.length === 2",
									"tests[\"name\"] = jsonData[0].name === \"Challenge1 Child\" || jsonData[0].name === \"Challenge2 Child\";",
									"tests[\"description\"] = jsonData[0].description === \"Challenge1 Child description\" || jsonData[0].description === \"Challenge2 Child description\";",
									"tests[\"instruction\"] = jsonData[0].instruction === \"Challenge1 Child instruction\" || jsonData[0].instruction === \"Challenge2 Child instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Random Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45126818-4d94-43f6-8de4-62175d2761da",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"jsonData[0].name === \"Task 2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}/tasks?cs=1&ts=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}",
								"tasks"
							],
							"query": [
								{
									"key": "cs",
									"value": "1"
								},
								{
									"key": "ts",
									"value": "2"
								}
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Clustered Points",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a78c26b-e84f-4bca-a07c-bf864a629066",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/search/clustered?search=%7B%22challengeSearch%22%3A%22Challenge2%22%7D&limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"search",
								"clustered"
							],
							"query": [
								{
									"key": "search",
									"value": "%7B%22challengeSearch%22%3A%22Challenge2%22%7D"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project With Children Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "ab03c77c-50cc-43f9-9317-a6f2bcb11a05"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				},
				{
					"name": "Project Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "97808ea5-8a12-4bfa-80cd-eb122ecefb0c"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Test project containing all children used for api testing. (Update)\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							]
						},
						"description": "Updates the project description"
					},
					"response": []
				},
				{
					"name": "Project Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "4397b7f8-95e4-465d-b767-79fbf3ff7866"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "Project List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f543200-a0e7-4105-be87-e95ed903c500",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Total projects should be greater than 0\"] = jsonData.length > 0"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects?limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Lists all the projects in the system"
					},
					"response": []
				},
				{
					"name": "Project Find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Body matches name\"] = responseBody.has(\"SimpleProject\");",
									"tests[\"Body matches description\"] = responseBody.has(\"Test project containing all children used for api testing. (Update)\");"
								],
								"id": "d3d4b156-004a-4d7b-aa58-24a63409d6e6"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects/find?q=SimpleProject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects",
								"find"
							],
							"query": [
								{
									"key": "q",
									"value": "SimpleProject"
								}
							]
						},
						"description": "Find the APITestProject in the system."
					},
					"response": []
				},
				{
					"name": "Project By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "cca41c51-4731-4f3e-ad91-59c87f397a05"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projectByName/SimpleProject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projectByName",
								"SimpleProject"
							]
						},
						"description": "Retrieve the project by the provided name"
					},
					"response": []
				},
				{
					"name": "Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "425c375f-d919-48ff-bd59-0d2335beb69b"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VirtualProject",
			"item": [
				{
					"name": "Virtual Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75f8b8cd-c986-48f1-8708-493d93608010",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"VPProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"VPProject\";",
									"tests[\"description\"] = jsonData.description === \"Test virtual project for api testing.\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"VPProject\",\n    \"description\":\"Test virtual project for api testing.\",\n    \"enabled\":true,\n    \"isVirtual\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88c3b11a-7075-4712-8e2a-f1a6bc118f5e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject1\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject1\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3455a17-46ec-4184-92ad-c28c6c719d3c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge1\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleChallenge1\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge\",\n    \"parent\":{{SimpleProjectID1}},\n    \"instruction\":\"Instruction for the simple challenge\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "VP Challenge Add",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef863480-35e6-4925-98a7-fdd1b269eb2a",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenge/{{SimpleChallengeID1}}/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenge",
								"{{SimpleChallengeID1}}",
								"add"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Project List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57034094-17bc-4fbb-883a-9de684ebc2c5",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Body matches name\"] = responseBody.has(\"VPProject\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects?limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Lists all the projects in the system"
					},
					"response": []
				},
				{
					"name": "VP Project Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "80d5dbf9-7ac0-447c-bb05-f84de5e89e3a",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"VPProject\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}"
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06a5ab2d-1119-4b99-b9a1-b89dc89ea167",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData[0].name === \"SimpleChallenge1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "VP Project Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8713d67-0177-484a-9adf-8385a802c541",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/project/summary?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"project",
								"summary"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": [
						{
							"name": "VP Project Summary",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apiKey",
										"value": "test"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:9000/api/v2/data/project/summary?projectList={{VPProjectID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9000",
									"path": [
										"api",
										"v2",
										"data",
										"project",
										"summary"
									],
									"query": [
										{
											"key": "projectList",
											"value": "{{VPProjectID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Accept-Encoding,Origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Thu, 23 May 2019 15:01:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "28"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "VP Project Leaderboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e89a173-287c-48a0-a6e0-d345d9dbc440",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/user/leaderboard?projectIds={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"user",
								"leaderboard"
							],
							"query": [
								{
									"key": "projectIds",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "582d1e2c-0850-48f7-af83-7f9787ff171b",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/project/activity?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"project",
								"activity"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project User Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06810bc2-19c2-4376-8dba-dd577a2b1f92",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/user/summary?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"user",
								"summary"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Raw Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe5797f4-4feb-4af0-8837-03245bbde925",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"[]\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/raw/activity?projectIds={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"raw",
								"activity"
							],
							"query": [
								{
									"key": "projectIds",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Challenge Remove",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b7e90c5-6041-477c-8152-602829d7905a",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenge/{{SimpleChallengeID1}}/remove",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenge",
								"{{SimpleChallengeID1}}",
								"remove"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12be6990-6059-46bf-8662-3e02cb33a9c3",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData[0].name === \"SimpleChallenge1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID1}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID1}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "441188d1-65b5-4ffa-8ce7-ba69cfddf3d0",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID1}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID1}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				},
				{
					"name": "VP Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43f4abc5-e5cd-440c-b69d-22cd7c8df61f",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tag",
			"item": [
				{
					"name": "Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3b1c306-afc2-4d0e-9a2d-422e12d58246",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestTagID\", jsonData.id);",
									"tests[\"name\"] = jsonData.name === \"testtag1\";",
									"tests[\"description\"] = jsonData.description === \"TestTag1 description\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tagType\":\"challenges\",\n    \"name\":\"TestTag1\",\n    \"description\":\"TestTag1 description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/keyword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keyword"
							]
						},
						"description": "Creates a basic tag"
					},
					"response": []
				},
				{
					"name": "Tag Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"testtag1\";",
									"tests[\"description\"] = jsonData.description === \"TestTag1 description\";"
								],
								"id": "7a0a923e-f31e-407d-a985-8ffabe379540"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Tag Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"updatedtesttag1\";",
									"tests[\"description\"] = jsonData.description === \"Updated Tag description\";"
								],
								"id": "c713df71-0252-466d-a45f-e6d913b84983"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"UpdatedTestTag1\",\n    \"description\":\"Updated Tag description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Updates a basic tag"
					},
					"response": []
				},
				{
					"name": "Tag Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "4c9b1cb1-573c-4d86-ac1c-5404eb787f3d"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Deletes the tag"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Get Super User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d3669aa-e7a2-4fbd-a884-cd66895e2af5",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id\"] = jsonData.id === -999;",
									"tests[\"test1\"] = jsonData.properties.test1 === \"value1\";",
									"tests[\"test2\"] = jsonData.properties.test2 === 8975;",
									"tests[\"test3\"] = jsonData.properties.test3 === true;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"properties\": {\n\t\t\"test1\":\"value1\",\n\t\t\"test2\":8975,\n\t\t\"test3\":true\n\t}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/user/-999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"user",
								"-999"
							]
						},
						"description": "Gets the super user that is automatically created with the system."
					},
					"response": []
				},
				{
					"name": "Get OSM Super User ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c18b86c-b3f0-4e15-ace4-446c1a6b5a9a",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id\"] = jsonData.id === -999;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/osmuser/SuperUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"osmuser",
								"SuperUser"
							]
						},
						"description": "Gets the super user that is automatically created with the system by using the super user mocked OSM name."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CooperativeWork",
			"item": [
				{
					"name": "testChange Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa0f1dad-5323-4248-92c1-9fd10e1132ea",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"12345\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"WAY\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"testit\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lanes\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "apiKey",
								"value": "test",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\n  \"osmId\":12345,\n  \"osmType\":\"WAY\",\n  \"updates\":{\"lanes\": \"3\", \"testit\": \"yes\"},\n  \"deletes\":[\"oneway\"]\n}]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/change/tag/test?changeType=delta",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"change",
								"tag",
								"test"
							],
							"query": [
								{
									"key": "changeType",
									"value": "delta"
								}
							]
						},
						"description": "testing a sample cooperative change"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"id": "f0655de2-828e-493e-a37c-5513e265d7fa"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation with Top-Level SF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cb790b5-bb25-4e36-91ff-77f67f99c1b0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SFChallenge\";",
									"tests[\"cooperativeType\"] = jsonData.cooperativeType === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SFChallenge\",\n    \"parent\": {{SimpleProjectID}},\n    \"description\":\"SFChallenge description\",\n    \"instruction\":\"SFChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"SF Task 1\",\n\t        \"cooperativeWork\":  {\n\t        \t\"meta\": {\n\t        \t  \"version\": 1\n\t        \t},\n        \t\t\"osmId\": 243499890,\n    \t\t\t\"osmType\": \"way\",\n        \t\t\"update\": {\n            \t\t\"tags\": {\n                \t\t\"update\": [{\"name\":\"building\", \"value\":\"yes\"}],            \n                \t\t\"delete\": [{\"name\":\"bldg\", \"ifUnused\":\"true\"}]\n        \t\t\t}\n    \t\t\t}\n    \t\t},\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\", \"building\": \"ok\", \"bldg\":\"y\"\n            }},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        }               \n    ]\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Creation with Embedded SF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "461dc094-b8ef-4f9d-9a8a-007cb6e8d07a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SFEChallenge\";",
									"tests[\"cooperativeType\"] = jsonData.cooperativeType === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SFEChallenge\",\n    \"parent\": {{SimpleProjectID}},\n    \"description\":\"SFEChallenge description\",\n    \"instruction\":\"SFEChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"SFE Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\", \"building\": \"ok\", \"bldg\":\"y\",\n            \t\"maproulette\": {\n            \t\t\"cooperativeWork\":  {\n            \t\t\t\"meta\": {\n\t        \t\t\t\t\"version\": 1\n\t        \t\t\t},\n        \t\t\t\t\"update\": {\n            \t\t\t\t\"tags\": {\n                \t\t\t\t\"update\": [{\"name\":\"building\", \"value\":\"yes\"}],            \n                \t\t\t\t\"delete\": [{\"name\":\"bldg\", \"ifUnused\":\"true\"}]\n        \t\t\t\t\t}\n        \t\t\t\t}\n    \t\t\t\t}\n            \t}\n            }},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        }               \n    ]\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6b14fd9-db8d-4d8f-9097-c77f7afc877d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SFTagID\", jsonData[0].id);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = jsonData[0].name === \"SF Task 1\";",
									"postman.setGlobalVariable(\"SFChallengeTask1ID\", jsonData[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "apply tag change to task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe152dc6-bf86-4422-b9a7-c1f9f6b7c493",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "comment",
								"type": "text",
								"value": "Submitted with Postman."
							},
							{
								"key": "requestReview",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\":\"This is just a test. Please ignore.\",\n  \"changes\":[{\n\t  \"osmId\":12345,\n\t  \"osmType\":\"WAY\",\n\t  \"updates\":{\"testit\": \"yes\"},\n\t  \"deletes\":[]\n\t}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}/fix/apply?tags=automated,postman",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}",
								"fix",
								"apply"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "automated,postman"
								}
							]
						},
						"description": "testing a sample cooperative change"
					},
					"response": []
				},
				{
					"name": "Read Tag Fix Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8c4b30e-56c9-4fbf-a802-0507092c062e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = jsonData.name === \"SF Task 1\";",
									"tests[\"SF Task 1 status is fixed\"] = jsonData.status === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Read Tag Task MR Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e139508-ec97-4d85-9501-a02ec4dff2d5",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = !!_.find(jsonData, {name: \"postman\"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}",
								"tags"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "a975bd5a-c626-494e-8174-6793de1e793e"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "taskBundles",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a37dd1b-d59e-496e-9ecb-e3d682a3f1d2",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestBundleProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestBundleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestBundleProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9018e834-27f3-4b75-9b14-987a2110776e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestBundleChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestBundleChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestBundleChallenge\",\n    \"parent\": {{TestBundleProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Task1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89711191-2bce-4544-acea-c0642b84da70",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask1 instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask1\",\n    \"parent\": {{TestBundleChallenge}},\n    \"instruction\":\"NewTask1 instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Task2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05b1017f-aa50-4871-8aa2-505bdd08e5b4",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask2\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask2\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask2 instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask2\",\n    \"parent\": {{TestBundleChallenge}},\n    \"instruction\":\"NewTask2 instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[105.1,1.6]},\"properties\":{\"id\": \"test3\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[105.2,1.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ac992ba-af94-4aad-aa4f-25931b328ffa",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewBundle\", jsonData.bundleId);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"New Bundle\",\n    \"taskIds\": [{{NewTask1}},{{NewTask2}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Bundle Tasks Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c43123f-3c65-4ebc-a68c-4ce3e26c9817",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewComment\", jsonData.id);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/comment?comment=This%20is%20a%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "setTaskBundleStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5549ecab-74f2-450d-b5a9-d947fceb377f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/2?primaryId={{NewTask1}}&comment=SomeComment&requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"2"
							],
							"query": [
								{
									"key": "primaryId",
									"value": "{{NewTask1}}"
								},
								{
									"key": "comment",
									"value": "SomeComment"
								},
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0b8f257-0237-4f65-8211-fdb5825b171a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attempt to Create Dup Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40f44926-d372-4e50-b769-c699489290a0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 400\"] = responseCode.code === 400;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"New Dup Bundle\",\n    \"taskIds\": [{{NewTask1}},{{NewTask2}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attempt setTaskStatus on Bundle Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35861575-10d6-4bf1-bb86-a30836752c64",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 400\"] = responseCode.code === 400;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/1?comment=SomeComment&requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"1"
							],
							"query": [
								{
									"key": "comment",
									"value": "SomeComment"
								},
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Task Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faa96c2e-b986-44b2-bcb2-8aa724c27f58",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 0;",
									"tests[\"reviewClaimedBy\"] = jsonData.reviewClaimedBy === -999;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/review/start",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"review",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Other Bundle Task (after start review)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ccadf25-331f-4977-92b3-74003f8bf621",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask2\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary !== true;",
									"tests[\"reviewClaimedBy\"] = jsonData.reviewClaimedBy === -999;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setBundleTaskReviewStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97513443-6811-4905-848f-bd627896fea2",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/review/1?comment=SomeReviewCommet&reviewStatus=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"review",
								"1"
							],
							"query": [
								{
									"key": "comment",
									"value": "SomeReviewCommet"
								},
								{
									"key": "reviewStatus",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Task After Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7611ff51-dc8a-406f-ae4b-b6e02924c31e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary === true;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a30e337-fe69-4c4c-a464-b1fd40cd30bc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"taskStatus1\"] = jsonData.tasks[0].status === 2",
									"tests[\"taskStatus2\"] = jsonData.tasks[1].status === 2"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "unbundleTasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f72b20f-1674-49c9-a563-c8083797a534",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tasksLength\"] = Object.keys(jsonData.tasks).length === 1",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/unbundle?taskIds={{NewTask2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"unbundle"
							],
							"query": [
								{
									"key": "taskIds",
									"value": "{{NewTask2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25ba7fe4-d1cf-4b42-8c92-bc3c4658a9ea",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}?primaryId={{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}"
							],
							"query": [
								{
									"key": "primaryId",
									"value": "{{NewTask1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03c78f09-bc8a-4e88-8d67-4e487eca298d",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestBundleProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestBundleProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "teams",
			"item": [
				{
					"name": "Create Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "560523f6-4e77-4ed7-b91e-a04905a29b36",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestTeam\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"Postman Team A\";",
									"tests[\"description\"] = jsonData.description === \"A test team from Postman\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"type": "text"
							},
							{
								"key": "contentType",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -1,\n  \"name\": \"Postman Team A\",\n  \"description\": \"A test team from Postman\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team"
							]
						},
						"description": "Creates a new Team"
					},
					"response": []
				},
				{
					"name": "Update Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1f2b843-1522-454c-a40f-8429e3ef8911",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Team A\";",
									"tests[\"description\"] = jsonData.description === \"A test team\";"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e2296478-d714-4a2c-b773-098c3ffa4106",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{TestTeam}},\n  \"name\": \"Team A\",\n  \"description\": \"A test team\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}"
							]
						},
						"description": "Updates team fields"
					},
					"response": []
				},
				{
					"name": "Get Team Members",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fafe2ad-c058-4b8a-8a02-1513ae1281c7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"result should be SuperUser\"] = jsonData[0].name === \"SuperUser\"",
									"tests[\"result should be on team\"] = jsonData[0].teamId === parseInt(pm.variables.get(\"TestTeam\"))",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/userMembers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"userMembers"
							]
						},
						"description": "Get members of team"
					},
					"response": []
				},
				{
					"name": "Create Team B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "743d20fb-7d78-48a3-b748-d391a89ea21a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"postman.setGlobalVariable(\"TestTeamB\", jsonData.id);",
									"tests[\"name\"] = jsonData.name === \"Team B\";",
									"tests[\"description\"] = jsonData.description === \"A second test team\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -1,\n  \"name\": \"Team B\",\n  \"description\": \"A second test team\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team"
							]
						},
						"description": "Creates another new team"
					},
					"response": []
				},
				{
					"name": "Search Teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06381495-8ac6-408b-bea1-8cde990be5c7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"result should be Team A\"] = jsonData[0].name === \"Team A\"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/teams/find?name=Team A",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"teams",
								"find"
							],
							"query": [
								{
									"key": "name",
									"value": "Team A"
								}
							]
						},
						"description": "Search teams"
					},
					"response": []
				},
				{
					"name": "Create Test Project for Teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d42fa429-2574-478f-bc72-6aab9d4aaed7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TeamProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TeamProject\",\n    \"description\":\"Test project for team testing\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a test project for team testing"
					},
					"response": []
				},
				{
					"name": "Add Team A to Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48e3b1c9-2000-4d6c-b7cc-84ed9a8748da",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}",
								"1"
							]
						},
						"description": "Add team A to Teams project"
					},
					"response": []
				},
				{
					"name": "Verify Team Grant on Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44a05e40-432e-4b02-ac6f-5bbb5e7a7c44",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has team grant\"] = !!_.find(",
									"    jsonData.grants,",
									"    g => g.role === 1 && g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and check the grants"
					},
					"response": []
				},
				{
					"name": "Get Teams Managing Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35e941d3-0d62-4305-8496-73452de95ef9",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"is Team A\"] = jsonData[0].team.name === \"Team A\"",
									"tests[\"has grant on project\"] = jsonData[0].grants[0].target.objectId === parseInt(pm.variables.get(\"TeamProject\"))",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/teams/projectManagers/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"teams",
								"projectManagers",
								"{{TeamProject}}"
							]
						},
						"description": "Get teams managing project"
					},
					"response": []
				},
				{
					"name": "Set Team A role on Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ae508d8-eba6-49fb-a1dd-92d0ba26697a",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}",
								"2"
							]
						},
						"description": "Set role of Team A on project"
					},
					"response": []
				},
				{
					"name": "Verify updated Team Grant",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52c7b98b-ad22-472d-8cbe-b41acefd4873",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has team grant\"] = !!_.find(",
									"    jsonData.grants,",
									"    g => g.role === 2 && g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and check the grants for updated role"
					},
					"response": []
				},
				{
					"name": "Remove Team A from Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "629c87dd-ad55-4983-ad6b-8c58dca3ea4b",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Remove team A from Teams project"
					},
					"response": []
				},
				{
					"name": "Verify team grant removed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ec6df4d-9599-4181-81d0-e34a94177e82",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has no team grants\"] = !_.find(",
									"    jsonData.grants,",
									"    g => g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and verify that grants to team A no longer exist"
					},
					"response": []
				},
				{
					"name": "Delete Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dae6bdf7-d5bd-4b6e-b9a1-0a531d386037",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}"
							]
						},
						"description": "Deletes team A"
					},
					"response": []
				},
				{
					"name": "Delete Team B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e4d87a9-749e-4d90-8689-f514e35892b1",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeamB}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeamB}}"
							]
						},
						"description": "Deletes team B"
					},
					"response": []
				},
				{
					"name": "Delete Teams Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9355fa0b-7258-481e-8a7e-46285d3e631c",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project for teams testing"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}