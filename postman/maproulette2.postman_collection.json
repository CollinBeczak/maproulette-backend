{
	"info": {
		"_postman_id": "9e408fa1-61c5-4baf-b4f2-7749cd7d4585",
		"name": "maproulette2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "challenge",
			"item": [
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"id": "231a8134-b6e9-4868-a321-0078f50b555c"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fbcede5-798b-488b-8d90-84213058b931",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID2\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject2\";",
									"tests[\"description\"] = jsonData.description === \"Test project just to test moving challenges.\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject2\",\n    \"description\":\"Test project just to test moving challenges.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "160803bf-805a-4ea2-a245-7f05f83a70df",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple challenge\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Move",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "247015f3-fa1c-498f-9b53-48288af53d0f",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"parent\"] = jsonData.parent == postman.getGlobalVariable(\"SimpleProjectID2\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}/project/{{SimpleProjectID2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}",
								"project",
								"{{SimpleProjectID2}}"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "f87645bd-7ba8-480f-83b9-fd9004cc1435"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Retrieved Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39abed0e-77a9-4d57-bed2-e498f7575795",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge\";",
									"tests[\"deleted\"] = jsonData.deleted === true;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Immediate Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "c464e592-1523-480d-9075-73e50fb99482"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f847279d-8814-45df-97e1-9d95ff039d38",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TagsChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and two tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple tag challenge\",\n    \"enabled\":false,\n    \"tags\":\"tag1,tag2\",\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d1fc10a-51d6-4d12-b93d-2524f741f3bd",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbe4392a-5122-46d7-bd1b-3a85432a102f",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"postman.setGlobalVariable(\"TagsChallengeTask1ID\", jsonData[0].id);",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";",
									"postman.setGlobalVariable(\"TagsChallengeTask2ID\", jsonData[1].id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Random Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6410a87a-93e0-4438-988c-89839ce8b904",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"if (jsonData[0].name == \"Task 1\") {",
									"    var id = pm.globals.get(\"TagsChallengeTask1ID\");    ",
									"} else {",
									"    var id = pm.globals.get(\"TagsChallengeTask2ID\");",
									"}",
									"tests[\"IDValidation\"] = jsonData[0].id == id;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks/random",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks",
								"random"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Next Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fba065b-2da6-4256-b6c6-991a82ba7568",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Task 2\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/nextTask/{{TagsChallengeTask1ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"nextTask",
								"{{TagsChallengeTask1ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Previous Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3079928-6846-4a23-9f2d-31cd00370aa1",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Task 1\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/previousTask/{{TagsChallengeTask2ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"previousTask",
								"{{TagsChallengeTask2ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks Batch Upload",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "567b200f-f37f-42fc-84cd-b6ad23153325",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Task 3\",\n        \"description\":\"Task 3 description\",\n        \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n    },\n    {\n        \"name\":\"Task 4\",\n        \"description\":\"Task 4 description\",\n        \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[93,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[93.1,1.6]},\"properties\":{}}]}\n    }\n]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Batch Upload two tasks to the challenge"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks Take 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";",
									"tests[\"Task3\"] = jsonData[2].name === \"Task 3\";",
									"tests[\"Task4\"] = jsonData[3].name === \"Task 4\";"
								],
								"id": "b43ec435-ee06-4fc6-b175-681b5e70c6d8"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Nearby Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00915723-f15b-4853-852b-b0ac378c80d4",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Task 2\");",
									"    pm.expect(pm.response.text()).to.include(\"Task 3\");",
									"    pm.expect(pm.response.text()).to.not.include(\"Task 4\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasksNearby/{{TagsChallengeTask1ID}}?limit=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasksNearby",
								"{{TagsChallengeTask1ID}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge GetTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c308cb6-a435-433f-b091-f32e80a109ca",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tag1\"] = jsonData[0].name === \"tag1\" || jsonData[0].name === \"tag2\"",
									"tests[\"tag2\"] = jsonData[1].name === \"tag2\" || jsonData[1].name === \"tag1\""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge DisassociateTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 204\"] = responseCode.code === 204;"
								],
								"id": "43c1531e-554e-4175-aad5-3470dfbb6f81"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags?tags=tag1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							],
							"query": [
								{
									"key": "tags",
									"value": "tag1"
								}
							]
						},
						"description": "Disassociates the tags from the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge GetTags afterDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tag1\"] = jsonData[0].name === \"tag2\""
								],
								"id": "3df5a45a-7229-4eea-af65-b3270f603d72"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05d2fa85-5f1a-468c-8651-27618e343cfc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"Updated challenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Updated challenge description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Updates the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "TagChallenge Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "de9238fe-3095-4cb6-a4a1-ce08e068b22b"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the Tag challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Task Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38134f32-286d-4ea1-9c07-3504f2dc07fe",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TagsTaskChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TaskTagsChallenge\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TaskTagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and task tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple task tag challenge\",\n    \"enabled\":false,\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]},\n            \"tags\":\"taskTag1,taskTag2\"\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]},\n            \"tags\":\"taskTag3\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Task Get Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f0ea73a-e6ef-4db0-86ae-566a2bc95ae3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"tasktag1\");",
									"    pm.expect(pm.response.text()).to.include(\"tasktag2\");",
									"    pm.expect(pm.response.text()).to.include(\"tasktag3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/keywords?tagType=tasks&limit=1000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keywords"
							],
							"query": [
								{
									"key": "tagType",
									"value": "tasks"
								},
								{
									"key": "limit",
									"value": "1000"
								}
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Task Tag Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2be65800-8544-4390-b81c-66b3355ed90b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsTaskChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsTaskChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the Tag challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "a6d461e1-34b7-468f-a95e-c668ce70478f"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				},
				{
					"name": "Challenge Project 2 Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "98e3420d-18d9-434f-82c3-e50a05bd2d00"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID2}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID2}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "task",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"id": "b579548f-572f-43bf-bbed-22dbf21897c1"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e9cf7c3-bf1b-45ba-b7c5-b8ba0b7d5b8e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestChallenge\",\n    \"parent\": {{TestProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test1\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\", \"version\": 1}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Tasks in Bounding Box",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2248f9dc-51ba-4b6b-88e7-769dd2a500fb",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Task 1\");",
									"    pm.expect(pm.response.text()).to.include(\"Task 2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"taskPropertySearch\": {\n\t\t\"operationType\": \"or\",\n\t\t\"left\": {\n\t\t\t\"key\": \"id\",\n\t\t\t\"value\": \"test1\",\n\t\t\t\"valueType\": \"string\",\n\t\t\t\"searchType\": \"equals\"\n\t\t},\n\t\t\"right\": {\n\t\t\t\"operationType\": \"and\",\n\t\t\t\"left\": {\n\t\t\t\t\"key\": \"id\",\n\t\t\t\t\"value\": \"test2\",\n\t\t\t\t\"valueType\": \"string\",\n\t\t\t\t\"searchType\": \"contains\"\n\t\t\t},\n\t\t\t\"right\": {\n\t\t\t\t\"key\": \"version\",\n\t\t\t\t\"value\": \"0\",\n\t\t\t\t\"valueType\": \"number\",\n\t\t\t\t\"searchType\": \"greater_than\"\n\t\t\t}\n\t\t}\n\t}\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/box/-180/-90/180/90?cid={{TestChallenge}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"box",
								"-180",
								"-90",
								"180",
								"90"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Bulk Change Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fcb7d330-5633-4cd9-ae16-0d010b191ea0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"taskPropertySearch\": {\n\t\t\"operationType\": \"or\",\n\t\t\"left\": {\n\t\t\t\"key\": \"id\",\n\t\t\t\"value\": \"test1\",\n\t\t\t\"valueType\": \"string\",\n\t\t\t\"searchType\": \"equals\"\n\t\t},\n\t\t\"right\": {\n\t\t\t\"operationType\": \"and\",\n\t\t\t\"left\": {\n\t\t\t\t\"key\": \"id\",\n\t\t\t\t\"value\": \"test2\",\n\t\t\t\t\"valueType\": \"string\",\n\t\t\t\t\"searchType\": \"contains\"\n\t\t\t},\n\t\t\t\"right\": {\n\t\t\t\t\"key\": \"version\",\n\t\t\t\t\"value\": \"0\",\n\t\t\t\t\"valueType\": \"number\",\n\t\t\t\t\"searchType\": \"greater_than\"\n\t\t\t}\n\t\t}\n\t}\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/changeStatus?cid={{TestChallenge}}&tbb=-180,-90,180,90&newStatus=2&tStatus=-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"changeStatus"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "tbb",
									"value": "-180,-90,180,90"
								},
								{
									"key": "newStatus",
									"value": "2"
								},
								{
									"key": "tStatus",
									"value": "-1"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Delete All Task Challenges",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdf45776-1867-4c4f-9408-70968d3c6321",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TestChallenge}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TestChallenge}}",
								"tasks"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Check Tasks Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df99ba38-f62a-4a6a-bb83-ecbe6528a4d2",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TestChallenge}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TestChallenge}}",
								"tasks"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "93cf82dc-cf43-45cc-af64-54c623336df7"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "8eac98a0-9b2c-42d4-8a07-b8898be41e78"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Start Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79e6cdbd-0f27-435f-aced-2cf9041cab52",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Refresh Task Lock",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a3b3510-d61b-4187-ad35-fa5d9b212bee",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f685cfa-8775-40a9-b37d-ffa7e4e95f13",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask Tags - Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f86dd5f-4390-45eb-9875-d441e6b27306",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\"newupdatetasktag\", \"taskTag2\"]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask - No Tags (remain unchanged)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1b0cb85-1385-4389-86a4-e719c6ccfe5f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE2\";",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8e25f9a-72b9-4734-bf41-689c97ecc605",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tagname1\"] = jsonData[0].name === \"newupdatetasktag\" || jsonData[0].name === \"tasktag2\";",
									"tests[\"tagname2\"] = jsonData[1].name === \"newupdatetasktag\" || jsonData[1].name === \"tasktag2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"tags"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask - Delete all Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cf6883e-f928-40bc-a709-31b1eae9f871",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE2\";",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task Tags Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07ff16de-a48a-42c5-a733-5cc3dc7d36e8",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tagname1\"] = jsonData[0].name === \"newupdatetasktag\" || jsonData[0].name === \"tasktag2\";",
									"tests[\"tagname2\"] = jsonData[1].name === \"newupdatetasktag\" || jsonData[1].name === \"tasktag2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"tags"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Add 1st Task Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewComment\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"comment\"] = jsonData.comment === \"This is a comment\";"
								],
								"id": "f2d24de4-98af-442e-b1f9-88df7e9c3666"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment?comment=This%20is%20a%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Update 1st Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"comment\"] = jsonData.comment === \"This is an updated comment\";"
								],
								"id": "da50511d-2975-4536-a182-18c311b1dbf8"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/comment/{{NewComment}}?comment=This%20is%20an%20updated%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"comment",
								"{{NewComment}}"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20an%20updated%20comment"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Add 2nd Task Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"comment\"] = jsonData.comment === \"This is a comment Number2\";"
								],
								"id": "c6343e21-8ef5-44e7-9732-889177c787e0"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment?comment=This%20is%20a%20comment%20Number2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment%20Number2"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Retrieve Single Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"comment\"] = jsonData.comment === \"This is an updated comment\";"
								],
								"id": "972ada35-33f3-4c37-85ec-fb146d9d3dcf"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/comment/{{NewComment}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"comment",
								"{{NewComment}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Retrieve All Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Comment1\"] = jsonData.length == 2;"
								],
								"id": "5a53167d-a943-4f03-ab40-1f242ab45f56"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comments"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"id": "e9aa8f96-a603-435d-b0eb-24d9949b8887"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment/{{NewComment}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment",
								"{{NewComment}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Release Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0992fb8-a384-49f9-8949-c79045f9c469",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task withTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "626ac657-f7d4-45ee-be7a-ff8a1790c62b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask With Tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask With Tags\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]},\n    \"tags\":\"newtaskTag1, newtaskTag2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Task Tags Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b242b499-608b-45c7-a6b0-9debca9d533e",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"newtasktag1\");",
									"    pm.expect(pm.response.text()).to.include(\"newtasktag2\");",
									"    pm.expect(pm.response.text()).to.include(\"newupdatetasktag\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/keywords?tagType=tasks&limit=1000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keywords"
							],
							"query": [
								{
									"key": "tagType",
									"value": "tasks"
								},
								{
									"key": "limit",
									"value": "1000"
								}
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Task Tags Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "708425b3-10e0-49cd-9b5d-cf9d19784aeb",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sometag1\");",
									"    pm.expect(pm.response.text()).to.include(\"sometag2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/tags/update?tags=sometag1,sometag2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"tags",
								"update"
							],
							"query": [
								{
									"key": "tags",
									"value": "sometag1,sometag2"
								}
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Read Task Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b1c30fd-611d-48ae-a9f3-55c6ec2ea539",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sometag1\");",
									"    pm.expect(pm.response.text()).to.include(\"sometag2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"tags"
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Task Tag Metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00036af1-94b5-4f9b-b066-2e47b930dcf9",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body contains 1 respsone\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(3);",
									"    pm.expect(jsonData[0].total).to.eql(1);",
									"    pm.expect(jsonData[0].tagName).to.eql(\"newupdatetasktag\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/tag/metrics?cid={{TestChallenge}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"tag",
								"metrics"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								}
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "366ea077-4ba1-4b29-9baf-df20225b4553"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "TaskReview",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"id": "d6b195c7-9444-4bcc-9ff0-462a993c93e8"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b7e235f-e1c9-4bb3-afb0-18760da67b6b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestChallenge\",\n    \"parent\": {{TestProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test1\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\", \"version\": 1}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "e04cbc57-4d52-4de0-9760-385b94373edc"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "SetTaskStatus w/review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8595fcf-a0fe-4518-a660-d4b169f55769",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/1?requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"1"
							],
							"query": [
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d4ee5d7-7950-4c9f-b4b0-3e93cde14f22",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"status\"] = jsonData.status === 1;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 0;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Review Requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06a361b1-537e-4e6f-bbd0-672b42f0f499",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"no tasks to be returned\"] = jsonData.total === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/review?cid={{TestChallenge}}&trStatus=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"review"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "0"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "SetTaskReviewStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0382850-3483-4d24-bfd9-e0005d1b4a5c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/review/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"review",
								"1"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task After Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b622c0c6-2ab3-4ddd-88bc-1de064067fbe",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"status\"] = jsonData.status === 1;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 1;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baad85d9-d10f-4a3b-8863-288be16b2afd",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one task returned\"] = jsonData.total === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&trStatus=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "1"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Reviews (inverted)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe752fbb-05ab-4949-b2f8-304ccfe1d0e3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"no tasks to be returned\"] = jsonData.total === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&trStatus=1&invf=trStatus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "1"
								},
								{
									"key": "invf",
									"value": "trStatus"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch all not meta-reviewed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8280dabd-ad26-491e-9260-6449dd181180",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one task to be returned\"] = jsonData.total === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&mrStatus=-2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "mrStatus",
									"value": "-2"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "SetMetaTaskReviewStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e19f1dc-0844-4100-9f8a-bd46c293791e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/metareview/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"metareview",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Task After Meta-Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6339eb7f-e836-413b-a153-cd338b23ea12",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"status\"] = jsonData.status === 1;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 1;",
									"tests[\"metaReviewStatus\"] = jsonData.metaReviewStatus === 1;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Meta-Reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c9fbd3f-1ac1-419a-9181-42a1e96660b9",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one task returned\"] = jsonData.total === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&mrStatus=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "mrStatus",
									"value": "1"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Meta-Reviews (inverted)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cbb69e4-8cc1-42a2-93cf-a6fd638e48e0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"no tasks to be returned\"] = jsonData.total === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&mrStatus=1&invf=mrStatus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "mrStatus",
									"value": "1"
								},
								{
									"key": "invf",
									"value": "mrStatus"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch all not meta-reviewed Again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f25f6593-1ca0-4f76-b22c-7fccad107f6a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"no task to be returned\"] = jsonData.total === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&mrStatus=-2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "mrStatus",
									"value": "-2"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "a31e0ed0-bcf2-4924-a7d5-1a03454621f8"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VirtualChallenge",
			"item": [
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2f4221e-7279-40b4-9c90-48a74a2dbb63",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "245a4ab2-5e91-4674-aae3-eee24c4a6acf",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"TagsChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and two tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple tag challenge\",\n    \"enabled\":false,\n    \"tags\":\"tag1,tag2\",\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e26f3054-6028-46c3-821a-4eb1c7c2712b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";"
								],
								"id": "ba1a8642-33ee-4c03-9062-66dbb6171abf"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "135f0299-20dd-4994-91de-e3903c58d995",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"test\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"location\": {\n      \"left\":102,\n      \"bottom\":0,\n      \"right\":104,\n      \"top\":2\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e7f47b6-7eb8-45b6-9a7a-c37390be3896",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Read By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8282c40c-9f8b-4078-83fe-60d901557f2c",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallengebyname/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallengebyname",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ea283bb-e82a-4b58-9685-9ca00c373c4e",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"testUpdate\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"testUpdate\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02c21783-4b95-4deb-a5f4-492d97fe4597",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData[0].name === \"testUpdate\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Task List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d12bcd1-4d4f-4601-a7bf-641a3bb98547",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"size\"] = jsonData.length === 2;",
									"pm.globals.set(\"VChallengeTask1ID\", jsonData[0].id);",
									"pm.globals.set(\"VChallengeTask2ID\", jsonData[1].id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Random Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf78990d-d030-4c2b-a073-bc94bc35c607",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Next Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1c1a292-e609-49c2-9282-67eab04cb492",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"id\"] = jsonData.id == pm.globals.get(\"VChallengeTask2ID\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/nextTask/{{VChallengeTask1ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"nextTask",
								"{{VChallengeTask1ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Previous Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ecbd1488-fa7b-4591-a4e8-7410956b572e",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"id\"] = jsonData.id == pm.globals.get(\"VChallengeTask1ID\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/previousTask/{{VChallengeTask2ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"previousTask",
								"{{VChallengeTask2ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Nearby Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d44889bd-b1dd-456c-a527-2e7bd5ccac7a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Nearby Task 1\"] = jsonData.length > 0 && (jsonData[0].name === \"Task 1\" || jsonData[0].name === \"Task 2\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/tasksNearby/{{VChallengeTask2ID}}?limit=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"tasksNearby",
								"{{VChallengeTask2ID}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge GeoJSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05b6f095-1386-42bc-9e40-d5c7eab54f96",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/view/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"view",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Clustered Points",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40ac2c92-1733-4492-b513-ebea0046f384",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/clustered/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"clustered",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75eae6ce-a5c3-41b8-b3f0-8b4acb394e5b",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation ID List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4ad4419-4135-409f-abfd-65388e575512",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeIDList\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"testVCList\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"testVCList\",\n  \"taskIdList\":[{{VChallengeTask1ID}}, {{VChallengeTask2ID}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge ID Task List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38ab81c1-1b4e-47e0-9597-2dda4fc026b5",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"size\"] = jsonData.length === 2;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeIDList}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeIDList}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Delete ID List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a65b5b74-85e6-4320-8335-ac5dffe0739b",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeIDList}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeIDList}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation Expiry",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17971f35-f527-4221-b098-0247d072882a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"test\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"location\": {\n      \"left\":102,\n      \"bottom\":0,\n      \"right\":104,\n      \"top\":2\n    }\n  },\n  \"expiry\":\"1 s\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Expiry Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc5407f4-0974-4d5c-9253-84d47bc4f695",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 404\"] = responseCode.code === 404;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation w/Boundings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2dd2c2bc-bbbe-4ed2-aeb4-554f7db2af02",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"testBoundingGeos1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"testBoundingGeos1\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"boundingGeometries\": [\n    \t{\"bounding\": {\n    \t\t\"type\":\"Polygon\",\n    \t\t\"coordinates\":[[[100,0],[100,3],[105,3],[105,0],[100,0]]]\n    \t}},\n    \t{\"bounding\": {\n    \t\t\"type\":\"Polygon\",\n    \t\t\"coordinates\":[[[1,1],[1,2],[2,2],[2,1],[1,1]]]\n    \t}}\n    ]\n  }\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "4e499e64-f5fd-4d2e-ab61-d130c2cc6ac9"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "data",
			"item": [
				{
					"name": "ChallengeSummary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/challenge/8953?priority=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"challenge",
								"8953"
							],
							"query": [
								{
									"key": "priority",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "project",
			"item": [
				{
					"name": "Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bd8f497-235e-4922-af00-5b07c5404e1d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Project Creation With Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8199cb8a-c368-4d19-80a2-cfa96aa73b9a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"ProjectWithChildren\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"ProjectWithChildren\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing 2 children.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"ProjectWithChildren\",\n    \"description\":\"Test project containing 2 children.\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Project Children Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d142e44a-df5d-4d33-803a-e2e224e509d5",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \t\"parent\": {{ProjectWithChildren}},\n        \"name\":\"Challenge1 Child\",\n        \"description\":\"Challenge1 Child description\",\n        \"instruction\":\"Challenge1 Child instruction\",\n        \"children\":[\n            {\n                \"name\":\"Task 1\",\n                \"description\":\"Task 1 description\",\n                \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n            },\n            {\n                \"name\":\"Task 2\",\n                \"description\":\"Task 2 description\",\n                \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n            }\n        ]\n    },\n    {\n    \t\"parent\": {{ProjectWithChildren}},\n        \"name\":\"Challenge2 Child\",\n        \"description\":\"Challenge2 Child description\",\n        \"instruction\":\"Challenge2 Child instruction\"\n    }\n]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenges"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d3f8d03-e170-4394-be1a-db101c511211",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Expected Children count\"] = jsonData.length === 0"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Children 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "463ef6da-ae3f-4c39-b37b-2cc0f939ee3d",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Expected Children count\"] = jsonData.length === 2",
									"tests[\"name\"] = jsonData[0].name === \"Challenge1 Child\" || jsonData[0].name === \"Challenge2 Child\";",
									"tests[\"description\"] = jsonData[0].description === \"Challenge1 Child description\" || jsonData[0].description === \"Challenge2 Child description\";",
									"tests[\"instruction\"] = jsonData[0].instruction === \"Challenge1 Child instruction\" || jsonData[0].instruction === \"Challenge2 Child instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Random Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df41b016-08af-4020-8056-87ca279aec3e",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"jsonData[0].name === \"Task 2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}/tasks?cs=1&ts=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}",
								"tasks"
							],
							"query": [
								{
									"key": "cs",
									"value": "1"
								},
								{
									"key": "ts",
									"value": "2"
								}
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Clustered Points",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0949313f-8102-4558-9300-25f48f7cddad",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/search/clustered?search=%7B%22challengeSearch%22%3A%22Challenge2%22%7D&limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"search",
								"clustered"
							],
							"query": [
								{
									"key": "search",
									"value": "%7B%22challengeSearch%22%3A%22Challenge2%22%7D"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project With Children Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "02fe6091-7140-4791-9720-595214dcbe0a"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				},
				{
					"name": "Project Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "3e49c5fe-4a7a-4036-ab01-c271bc0ea472"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Test project containing all children used for api testing. (Update)\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							]
						},
						"description": "Updates the project description"
					},
					"response": []
				},
				{
					"name": "Project Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "50d19de6-f2da-4407-b9c9-59e789f8222f"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "Project List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccf67395-d4f3-4314-a021-41dc5cca303f",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Total projects should be greater than 0\"] = jsonData.length > 0"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects?limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Lists all the projects in the system"
					},
					"response": []
				},
				{
					"name": "Project Find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Body matches name\"] = responseBody.has(\"SimpleProject\");",
									"tests[\"Body matches description\"] = responseBody.has(\"Test project containing all children used for api testing. (Update)\");"
								],
								"id": "af4f6bc3-f39c-4a1b-b423-12331770cb33"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects/find?q=SimpleProject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects",
								"find"
							],
							"query": [
								{
									"key": "q",
									"value": "SimpleProject"
								}
							]
						},
						"description": "Find the APITestProject in the system."
					},
					"response": []
				},
				{
					"name": "Project By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "ec3200a1-e879-4488-b492-2c834de5af77"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projectByName/SimpleProject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projectByName",
								"SimpleProject"
							]
						},
						"description": "Retrieve the project by the provided name"
					},
					"response": []
				},
				{
					"name": "Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "33caff0d-309f-476f-914a-773970c8301e"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VirtualProject",
			"item": [
				{
					"name": "Virtual Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3de7061b-3e77-4b6a-9d62-a098a2155d9c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"VPProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"VPProject\";",
									"tests[\"description\"] = jsonData.description === \"Test virtual project for api testing.\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"VPProject\",\n    \"description\":\"Test virtual project for api testing.\",\n    \"enabled\":true,\n    \"isVirtual\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "819fe180-2e57-444a-9211-3f0f46e49d24",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject1\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject1\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4d2905d-a9d1-4a27-bb48-a8c1d09de065",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge1\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleChallenge1\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge\",\n    \"parent\":{{SimpleProjectID1}},\n    \"instruction\":\"Instruction for the simple challenge\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "VP Challenge Add",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6d9cc04-b468-4845-a73d-33130653a969",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenge/{{SimpleChallengeID1}}/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenge",
								"{{SimpleChallengeID1}}",
								"add"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Project List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0497ff9c-ab06-4f5b-9f39-1bbae022c766",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Body matches name\"] = responseBody.has(\"VPProject\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects?limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Lists all the projects in the system"
					},
					"response": []
				},
				{
					"name": "VP Project Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1fcf6a65-da9e-4edf-95b2-6af8ddcc3c35",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"VPProject\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}"
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3644833a-2cd4-49ea-a553-1141cf4e402a",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData[0].name === \"SimpleChallenge1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "VP Project Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b27bc37b-e0e0-4def-97ee-1f2af1a99d47",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/project/summary?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"project",
								"summary"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": [
						{
							"name": "VP Project Summary",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apiKey",
										"value": "test"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:9000/api/v2/data/project/summary?projectList={{VPProjectID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9000",
									"path": [
										"api",
										"v2",
										"data",
										"project",
										"summary"
									],
									"query": [
										{
											"key": "projectList",
											"value": "{{VPProjectID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Accept-Encoding,Origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Thu, 23 May 2019 15:01:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "28"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "VP Project Leaderboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afe60243-8a04-4f08-b800-05f558a907d9",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/user/leaderboard?projectIds={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"user",
								"leaderboard"
							],
							"query": [
								{
									"key": "projectIds",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e444c668-d81d-478a-a0ce-39d327de50e4",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/project/activity?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"project",
								"activity"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project User Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b293ee3e-189a-4b57-a4b4-5e4bf11e85dd",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/user/summary?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"user",
								"summary"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Raw Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6f01fd6-5bd5-4053-8e79-572b6fde770b",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"[]\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/raw/activity?projectIds={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"raw",
								"activity"
							],
							"query": [
								{
									"key": "projectIds",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Challenge Remove",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f71b80bc-e480-4b57-88c4-f1ee22d48629",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenge/{{SimpleChallengeID1}}/remove",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenge",
								"{{SimpleChallengeID1}}",
								"remove"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "019c73bb-23d4-442a-8cc2-d949268d8b87",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData[0].name === \"SimpleChallenge1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID1}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID1}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cae8163-4fc2-4505-8936-cbfd35a1a120",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID1}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID1}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				},
				{
					"name": "VP Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b3807b2-84e0-4b84-881b-8978eae6aac4",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tag",
			"item": [
				{
					"name": "Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "22a303e4-df5e-4710-9dee-4f3746e4eab4",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestTagID\", jsonData.id);",
									"tests[\"name\"] = jsonData.name === \"testtag1\";",
									"tests[\"description\"] = jsonData.description === \"TestTag1 description\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tagType\":\"challenges\",\n    \"name\":\"TestTag1\",\n    \"description\":\"TestTag1 description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/keyword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keyword"
							]
						},
						"description": "Creates a basic tag"
					},
					"response": []
				},
				{
					"name": "Tag Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"testtag1\";",
									"tests[\"description\"] = jsonData.description === \"TestTag1 description\";"
								],
								"id": "0fc86032-621b-4c41-ad56-aeda9f6b6666"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Tag Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"updatedtesttag1\";",
									"tests[\"description\"] = jsonData.description === \"Updated Tag description\";"
								],
								"id": "25d7f164-4a77-41f9-bce1-fcc381715c61"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"UpdatedTestTag1\",\n    \"description\":\"Updated Tag description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Updates a basic tag"
					},
					"response": []
				},
				{
					"name": "Tag Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "39b377a2-6545-4044-ab94-581703d6a3be"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Deletes the tag"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Get Super User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "395484ba-2c59-4fbc-9c90-58fce987d86a",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id\"] = jsonData.id === -999;",
									"tests[\"test1\"] = jsonData.properties.test1 === \"value1\";",
									"tests[\"test2\"] = jsonData.properties.test2 === 8975;",
									"tests[\"test3\"] = jsonData.properties.test3 === true;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"properties\": {\n\t\t\"test1\":\"value1\",\n\t\t\"test2\":8975,\n\t\t\"test3\":true\n\t}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/user/-999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"user",
								"-999"
							]
						},
						"description": "Gets the super user that is automatically created with the system."
					},
					"response": []
				},
				{
					"name": "Get OSM Super User ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "048a6f84-34e4-46b8-8851-0f585ef4b1a3",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id\"] = jsonData.id === -999;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/osmuser/SuperUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"osmuser",
								"SuperUser"
							]
						},
						"description": "Gets the super user that is automatically created with the system by using the super user mocked OSM name."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Following",
			"item": [
				{
					"name": "Get Following",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46124876-12c7-4776-ad79-47dc6e718c39",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty\"] = jsonData.id === [];"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/user/-999/following",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"user",
								"-999",
								"following"
							]
						},
						"description": "Gets the users the super user is following"
					},
					"response": []
				},
				{
					"name": "Get Followers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4812ab75-846c-4e92-ab53-0f84bf7cf1e9",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty\"] = jsonData.id === [];"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/user/-999/followers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"user",
								"-999",
								"followers"
							]
						},
						"description": "Gets the users following the super user"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3a53990f-02f2-490b-98c1-a72d74db6017",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c1e07e2f-48fc-4668-866d-7e3660df3c18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CooperativeWork",
			"item": [
				{
					"name": "testChange Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d64af459-b11e-47c1-8669-045d85e0ff30",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"12345\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"WAY\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"testit\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lanes\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "apiKey",
								"value": "test",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\n  \"osmId\":12345,\n  \"osmType\":\"WAY\",\n  \"updates\":{\"lanes\": \"3\", \"testit\": \"yes\"},\n  \"deletes\":[\"oneway\"]\n}]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/change/tag/test?changeType=delta",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"change",
								"tag",
								"test"
							],
							"query": [
								{
									"key": "changeType",
									"value": "delta"
								}
							]
						},
						"description": "testing a sample cooperative change"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"id": "94ca685e-8ece-4b40-81ca-2105b46291b3"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation with Top-Level SF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bb10981-8a92-482f-955f-d962dce2a28f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SFChallenge\";",
									"tests[\"cooperativeType\"] = jsonData.cooperativeType === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SFChallenge\",\n    \"parent\": {{SimpleProjectID}},\n    \"description\":\"SFChallenge description\",\n    \"instruction\":\"SFChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"SF Task 1\",\n\t        \"cooperativeWork\":  {\n\t        \t\"meta\": {\n\t        \t  \"version\": 1\n\t        \t},\n        \t\t\"osmId\": 243499890,\n    \t\t\t\"osmType\": \"way\",\n        \t\t\"update\": {\n            \t\t\"tags\": {\n                \t\t\"update\": [{\"name\":\"building\", \"value\":\"yes\"}],            \n                \t\t\"delete\": [{\"name\":\"bldg\", \"ifUnused\":\"true\"}]\n        \t\t\t}\n    \t\t\t}\n    \t\t},\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\", \"building\": \"ok\", \"bldg\":\"y\"\n            }},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        }               \n    ]\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Creation with Embedded SF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20f5eaa9-9e2f-4096-861d-9135f3904da6",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SFEChallenge\";",
									"tests[\"cooperativeType\"] = jsonData.cooperativeType === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SFEChallenge\",\n    \"parent\": {{SimpleProjectID}},\n    \"description\":\"SFEChallenge description\",\n    \"instruction\":\"SFEChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"SFE Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\", \"building\": \"ok\", \"bldg\":\"y\",\n            \t\"maproulette\": {\n            \t\t\"cooperativeWork\":  {\n            \t\t\t\"meta\": {\n\t        \t\t\t\t\"version\": 1\n\t        \t\t\t},\n        \t\t\t\t\"update\": {\n            \t\t\t\t\"tags\": {\n                \t\t\t\t\"update\": [{\"name\":\"building\", \"value\":\"yes\"}],            \n                \t\t\t\t\"delete\": [{\"name\":\"bldg\", \"ifUnused\":\"true\"}]\n        \t\t\t\t\t}\n        \t\t\t\t}\n    \t\t\t\t}\n            \t}\n            }},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        }               \n    ]\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6610b149-f9c4-4083-bc7a-d0a62d615f33",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SFTagID\", jsonData[0].id);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = jsonData[0].name === \"SF Task 1\";",
									"postman.setGlobalVariable(\"SFChallengeTask1ID\", jsonData[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "apply tag change to task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5dddd860-0daa-4ee4-ab0a-66ac2d4a7ec3",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "comment",
								"type": "text",
								"value": "Submitted with Postman."
							},
							{
								"key": "requestReview",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\":\"This is just a test. Please ignore.\",\n  \"changes\":[{\n\t  \"osmId\":12345,\n\t  \"osmType\":\"WAY\",\n\t  \"updates\":{\"testit\": \"yes\"},\n\t  \"deletes\":[]\n\t}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}/fix/apply?tags=automated,postman",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}",
								"fix",
								"apply"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "automated,postman"
								}
							]
						},
						"description": "testing a sample cooperative change"
					},
					"response": []
				},
				{
					"name": "Read Tag Fix Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ac67891-ae87-4c95-8ecf-af62438a2981",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = jsonData.name === \"SF Task 1\";",
									"tests[\"SF Task 1 status is fixed\"] = jsonData.status === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Read Tag Task MR Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35bec095-54f1-4e93-9d50-a8eb9126c9ae",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = !!_.find(jsonData, {name: \"postman\"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}",
								"tags"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "b350d64b-f867-4efc-b1b3-1751c4ae0f46"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "taskBundles",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7367abe0-8a4e-41b5-a525-25c193dd4c42",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestBundleProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestBundleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestBundleProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bf09f1a-17b9-40ba-990f-7712ebd06f56",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestBundleChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestBundleChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestBundleChallenge\",\n    \"parent\": {{TestBundleProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Task1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aaadc5d1-fcec-479b-8316-0b7307672a07",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask1 instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask1\",\n    \"parent\": {{TestBundleChallenge}},\n    \"instruction\":\"NewTask1 instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Task2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebdb2abe-d174-4ed2-9424-d063b61e047d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask2\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask2\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask2 instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask2\",\n    \"parent\": {{TestBundleChallenge}},\n    \"instruction\":\"NewTask2 instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[105.1,1.6]},\"properties\":{\"id\": \"test3\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[105.2,1.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fde03f36-2a25-46eb-a6ec-5b69d94424d7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewBundle\", jsonData.bundleId);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"New Bundle\",\n    \"taskIds\": [{{NewTask1}},{{NewTask2}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Bundle Tasks Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abbb482f-c232-4084-8b60-4688c93ad3f8",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewComment\", jsonData.id);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/comment?comment=This%20is%20a%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "setTaskBundleStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7989f3c0-a3c9-4127-b9e8-b7c9332ff679",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/2?primaryId={{NewTask1}}&comment=SomeComment&requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"2"
							],
							"query": [
								{
									"key": "primaryId",
									"value": "{{NewTask1}}"
								},
								{
									"key": "comment",
									"value": "SomeComment"
								},
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "468963e7-dffa-4764-8291-7b690583f987",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attempt to Create Dup Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c716bae-877f-4bec-9d7f-2278f5f03ba6",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 400\"] = responseCode.code === 400;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"New Dup Bundle\",\n    \"taskIds\": [{{NewTask1}},{{NewTask2}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attempt setTaskStatus on Bundle Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c134e52e-69af-459b-b7a1-44c2b9b66bda",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 400\"] = responseCode.code === 400;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/1?comment=SomeComment&requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"1"
							],
							"query": [
								{
									"key": "comment",
									"value": "SomeComment"
								},
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Task Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27f9b672-d797-4f29-9d4a-edb18f0e6a44",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 0;",
									"tests[\"reviewClaimedBy\"] = jsonData.reviewClaimedBy === -999;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/review/start",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"review",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Other Bundle Task (after start review)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39ec5c15-ad26-4fe3-913b-1438cdf58cb1",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask2\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary !== true;",
									"tests[\"reviewClaimedBy\"] = jsonData.reviewClaimedBy === -999;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setBundleTaskReviewStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc14d9de-9bad-4917-a22c-9c7613170755",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/review/1?comment=SomeReviewCommet&reviewStatus=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"review",
								"1"
							],
							"query": [
								{
									"key": "comment",
									"value": "SomeReviewCommet"
								},
								{
									"key": "reviewStatus",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Task After Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88112472-4080-4440-a7a6-1476b1bba3a3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary === true;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fdc011b-9d38-4fb7-b75a-492b712d0f29",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"taskStatus1\"] = jsonData.tasks[0].status === 2",
									"tests[\"taskStatus2\"] = jsonData.tasks[1].status === 2"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "unbundleTasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f04ad906-6654-431c-97cf-b476d501a8d0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tasksLength\"] = Object.keys(jsonData.tasks).length === 1",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/unbundle?taskIds={{NewTask2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"unbundle"
							],
							"query": [
								{
									"key": "taskIds",
									"value": "{{NewTask2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03573b2a-8520-40be-8900-d641dfea8fc4",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}?primaryId={{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}"
							],
							"query": [
								{
									"key": "primaryId",
									"value": "{{NewTask1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "80ebfba6-f6f8-4c34-8786-b01e950efcd2",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestBundleProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestBundleProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "teams",
			"item": [
				{
					"name": "Create Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27e1051c-657f-4d10-9877-ef441b6fc9f3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestTeam\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"Postman Team A\";",
									"tests[\"description\"] = jsonData.description === \"A test team from Postman\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"type": "text"
							},
							{
								"key": "contentType",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -1,\n  \"name\": \"Postman Team A\",\n  \"description\": \"A test team from Postman\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team"
							]
						},
						"description": "Creates a new Team"
					},
					"response": []
				},
				{
					"name": "Update Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da3bcb50-a12b-4232-96b6-9141e837549a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Team A\";",
									"tests[\"description\"] = jsonData.description === \"A test team\";"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b61b29d3-9cdf-4f5b-a1ff-ec0da17e0187",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{TestTeam}},\n  \"name\": \"Team A\",\n  \"description\": \"A test team\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}"
							]
						},
						"description": "Updates team fields"
					},
					"response": []
				},
				{
					"name": "Get Team Members",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d30b6656-955d-492e-bdc0-63f731bd5100",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"result should be SuperUser\"] = jsonData[0].name === \"SuperUser\"",
									"tests[\"result should be on team\"] = jsonData[0].teamId === parseInt(pm.variables.get(\"TestTeam\"))",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/userMembers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"userMembers"
							]
						},
						"description": "Get members of team"
					},
					"response": []
				},
				{
					"name": "Create Team B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9fa7538-9291-412e-9ce0-14bd4b38a9ad",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"postman.setGlobalVariable(\"TestTeamB\", jsonData.id);",
									"tests[\"name\"] = jsonData.name === \"Team B\";",
									"tests[\"description\"] = jsonData.description === \"A second test team\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -1,\n  \"name\": \"Team B\",\n  \"description\": \"A second test team\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team"
							]
						},
						"description": "Creates another new team"
					},
					"response": []
				},
				{
					"name": "Search Teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b509a609-a1cb-4337-83cb-c78aa8186344",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"result should be Team A\"] = jsonData[0].name === \"Team A\"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/teams/find?name=Team A",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"teams",
								"find"
							],
							"query": [
								{
									"key": "name",
									"value": "Team A"
								}
							]
						},
						"description": "Search teams"
					},
					"response": []
				},
				{
					"name": "Create Test Project for Teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e16feca2-c275-42dd-9826-f269be028dc3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TeamProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TeamProject\",\n    \"description\":\"Test project for team testing\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a test project for team testing"
					},
					"response": []
				},
				{
					"name": "Add Team A to Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "711c9f39-cd4a-475a-833b-7f205a632b0a",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}",
								"1"
							]
						},
						"description": "Add team A to Teams project"
					},
					"response": []
				},
				{
					"name": "Verify Team Grant on Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d489565a-a253-4a1b-9e96-c891b69452f7",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has team grant\"] = !!_.find(",
									"    jsonData.grants,",
									"    g => g.role === 1 && g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and check the grants"
					},
					"response": []
				},
				{
					"name": "Get Teams Managing Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0eee68d-7b2e-47ab-8db4-6ca496655f21",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"is Team A\"] = jsonData[0].team.name === \"Team A\"",
									"tests[\"has grant on project\"] = jsonData[0].grants[0].target.objectId === parseInt(pm.variables.get(\"TeamProject\"))",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/teams/projectManagers/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"teams",
								"projectManagers",
								"{{TeamProject}}"
							]
						},
						"description": "Get teams managing project"
					},
					"response": []
				},
				{
					"name": "Set Team A role on Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86cf715e-91ce-4f51-8069-141060af95c4",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}",
								"2"
							]
						},
						"description": "Set role of Team A on project"
					},
					"response": []
				},
				{
					"name": "Verify updated Team Grant",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15bdb079-e27d-4162-b574-8e397e88d3bd",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has team grant\"] = !!_.find(",
									"    jsonData.grants,",
									"    g => g.role === 2 && g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and check the grants for updated role"
					},
					"response": []
				},
				{
					"name": "Remove Team A from Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d6166d2-d658-4ba5-bd7c-a15a943f34b7",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Remove team A from Teams project"
					},
					"response": []
				},
				{
					"name": "Verify team grant removed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0119d882-b14e-491b-81d2-a245befeb32a",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has no team grants\"] = !_.find(",
									"    jsonData.grants,",
									"    g => g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and verify that grants to team A no longer exist"
					},
					"response": []
				},
				{
					"name": "Delete Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c06127a-7e9a-4da0-8984-2672daf8166d",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}"
							]
						},
						"description": "Deletes team A"
					},
					"response": []
				},
				{
					"name": "Delete Team B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65f2923a-5d99-4289-88b7-d4dfca2edc12",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeamB}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeamB}}"
							]
						},
						"description": "Deletes team B"
					},
					"response": []
				},
				{
					"name": "Delete Teams Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dde75faa-4001-4989-ae55-e1c5d81e1c52",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project for teams testing"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}