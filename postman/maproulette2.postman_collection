{
	"variables": [],
	"info": {
		"name": "maproulette2",
		"_postman_id": "fc293308-9da6-f4cc-0e4e-a634dc3111e8",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "challenge",
			"description": "",
			"item": [
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);\ntests[\"response code is 201\"] = responseCode.code === 201;\ntests[\"name\"] = jsonData.name === \"SimpleProject\";\ntests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project",
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"description": "Creates a base project for all the other MapRoulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"SimpleChallengeID\", jsonData.id);\ntests[\"response code is 201\"] = responseCode.code === 201;\ntests[\"name\"] = jsonData.name === \"SimpleChallenge\";\ntests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge\";\ntests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple challenge\";\ntests[\"challengeType\"] = jsonData.challengeType === 1;"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge",
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple challenge\",\n    \"enabled\":false\n}"
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\ntests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"status\"] = jsonData.status === \"OK\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}",
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"TagsChallengeID\", jsonData.id);\ntests[\"response code is 201\"] = responseCode.code === 201;\ntests[\"name\"] = jsonData.name === \"TagsChallenge\";\ntests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";\ntests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";\ntests[\"challengeType\"] = jsonData.challengeType === 1;"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge",
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and two tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple tag challenge\",\n    \"enabled\":false,\n    \"tags\":\"tag1,tag2\",\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"description\":\"Task 1 description\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"description\":\"Task 2 description\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\ntests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"name\"] = jsonData.name === \"TagsChallenge\";\ntests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";\ntests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";\ntests[\"challengeType\"] = jsonData.challengeType === 1;"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\ntests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"Task1\"] = jsonData[0].name === \"Task 1\";\ntests[\"Task2\"] = jsonData[1].name === \"Task 2\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks Batch Upload",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 201\"] = responseCode.code === 201;"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Task 3\",\n        \"description\":\"Task 3 description\",\n        \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n    },\n    {\n        \"name\":\"Task 4\",\n        \"description\":\"Task 4 description\",\n        \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n    }\n]"
						},
						"description": "Batch Upload two tasks to the challenge"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks Take 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\ntests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"Task1\"] = jsonData[0].name === \"Task 1\";\ntests[\"Task2\"] = jsonData[1].name === \"Task 2\";\ntests[\"Task3\"] = jsonData[2].name === \"Task 3\";\ntests[\"Task4\"] = jsonData[3].name === \"Task 4\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge GetTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\ntests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"tag1\"] = jsonData[0].name === \"tag1\"\ntests[\"tag2\"] = jsonData[1].name === \"tag2\""
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge DisassociateTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 204\"] = responseCode.code === 204;"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags?tags=tag1",
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Disassociates the tags from the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge GetTags afterDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\ntests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"tag1\"] = jsonData[0].name === \"tag2\""
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\ntests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"name\"] = jsonData.name === \"TagsChallenge\";\ntests[\"description\"] = jsonData.description === \"Updated challenge description\";\ntests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";\ntests[\"challengeType\"] = jsonData.challengeType === 1;"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Updated challenge description\"\n}"
						},
						"description": "Updates the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "TagChallenge Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\ntests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"status\"] = jsonData.status === \"OK\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the Tag challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Status\"] = jsonData.status === \"OK\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			]
		},
		{
			"name": "project",
			"description": "",
			"item": [
				{
					"name": "Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);\ntests[\"response code is 201\"] = responseCode.code === 201;\ntests[\"name\"] = jsonData.name === \"SimpleProject\";\ntests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project",
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"description": "Creates a base project for all the other MapRoulette API Testing"
					},
					"response": []
				},
				{
					"name": "Project Creation With Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"ProjectWithChildren\", jsonData.id);\ntests[\"response code is 201\"] = responseCode.code === 201;\ntests[\"name\"] = jsonData.name === \"ProjectWithChildren\";\ntests[\"description\"] = jsonData.description === \"Test project containing 2 children.\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project",
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"ProjectWithChildren\",\n    \"description\":\"Test project containing 2 children.\",\n    \"enabled\":false,\n    \"children\": [\n        {\n            \"name\":\"Challenge1 Child\",\n            \"description\":\"Challenge1 Child description\",\n            \"instruction\":\"Challenge1 Child instruction\",\n            \"children\":[\n                {\n                    \"name\":\"Task 1\",\n                    \"description\":\"Task 1 description\",\n                    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n                },\n                {\n                    \"name\":\"Task 2\",\n                    \"description\":\"Task 2 description\",\n                    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n                }\n            ]\n        },\n        {\n            \"name\":\"Challenge2 Child\",\n            \"description\":\"Challenge2 Child description\",\n            \"instruction\":\"Challenge2 Child instruction\"\n        }\n    ]\n}"
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"name\"] = jsonData[0].name === \"Challenge1 Child\";\ntests[\"description\"] = jsonData[0].description === \"Challenge1 Child description\";\ntests[\"instruction\"] = jsonData[0].instruction === \"Challenge1 Child instruction\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}/challenges",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project With Children Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Status\"] = jsonData.status === \"OK\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}",
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				},
				{
					"name": "Project Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"name\"] = jsonData.name === \"SimpleProject\";\ntests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Test project containing all children used for api testing. (Update)\"\n}"
						},
						"description": "Updates the project description"
					},
					"response": []
				},
				{
					"name": "Project Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"name\"] = jsonData.name === \"SimpleProject\";\ntests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "Project List",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"Body matches name\"] = responseBody.has(\"SimpleProject\");\ntests[\"Body matches description\"] = responseBody.has(\"Test project containing all children used for api testing. (Update)\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/projects?limit=-1",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"APITestProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"description": "Lists all the projects in the system"
					},
					"response": []
				},
				{
					"name": "Project Find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Body matches name\"] = responseBody.has(\"SimpleProject\");\ntests[\"Body matches description\"] = responseBody.has(\"Test project containing all children used for api testing. (Update)\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/projects/find?q=SimpleProject",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"APITestProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"description": "Find the APITestProject in the system."
					},
					"response": []
				},
				{
					"name": "Project By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"name\"] = jsonData.name === \"SimpleProject\";\ntests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/projectByName/SimpleProject",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"APITestProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"description": "Retrieve the project by the provided name"
					},
					"response": []
				},
				{
					"name": "Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Status\"] = jsonData.status === \"OK\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				}
			]
		},
		{
			"name": "tag",
			"description": "",
			"item": [
				{
					"name": "Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 201\"] = responseCode.code === 201;\nvar jsonData = JSON.parse(responseBody);\npostman.setGlobalVariable(\"TestTagID\", jsonData.id);\ntests[\"name\"] = jsonData.name === \"testtag1\";\ntests[\"description\"] = jsonData.description === \"TestTag1 description\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/tag",
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestTag1\",\n    \"description\":\"TestTag1 description\"\n}"
						},
						"description": "Creates a basic tag"
					},
					"response": []
				},
				{
					"name": "Tag Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"name\"] = jsonData.name === \"testtag1\";\ntests[\"description\"] = jsonData.description === \"TestTag1 description\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Tag Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"name\"] = jsonData.name === \"updatedtesttag1\";\ntests[\"description\"] = jsonData.description === \"Updated Tag description\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"UpdatedTestTag1\",\n    \"description\":\"Updated Tag description\"\n}"
						},
						"description": "Updates a basic tag"
					},
					"response": []
				},
				{
					"name": "Tag Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"status\"] = jsonData.status === \"OK\";"
							}
						}
					],
					"request": {
						"url": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the tag"
					},
					"response": []
				}
			]
		},
		{
			"name": "task",
			"description": "",
			"item": []
		}
	]
}