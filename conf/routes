# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                                       controllers.Application.index

# Task API
POST    /api/v2/task                                            controllers.TaskController.createTask
PUT     /api/v2/task/:id                                        controllers.TaskController.updateTask(id:Long)
GET     /api/v2/task/:id                                        controllers.TaskController.getTask(id:Long)
DELETE  /api/v2/task/:id                                        controllers.TaskController.deleteTask(id:Long)
GET     /api/v2/tasks/:primaryTag                               controllers.TaskController.listPrimary(primaryTag)
GET     /api/v2/tasks/:primaryTag/:secondaryTag                 controllers.TaskController.listSecondary(primaryTag, secondaryTag)
# Tag API
POST    /api/v2/tag                                             controllers.TagController.createTag
PUT     /api/v2/tag/:id                                         controllers.TagController.updateTag(id:Long)
GET     /api/v2/tag/:id                                         controllers.TagController.getTag(id:Long)
DELETE  /api/v2/tag/:id                                         controllers.TagController.deleteTag(id:Long)
GET     /api/v2/tags                                            controllers.TagController.getTags(prefix: String ?= "", limit: Int ?= (-1), offset: Int ?= 0)
# Handles invalid paths that use the /api/v2 prefix
POST    /api/v2/*path                                           controllers.Application.invalidAPIPath(path)
PUT     /api/v2/*path                                           controllers.Application.invalidAPIPath(path)
GET     /api/v2/*path                                           controllers.Application.invalidAPIPath(path)
DELETE  /api/v2/*path                                           controllers.Application.invalidAPIPath(path)
HEAD    /api/v2/*path                                           controllers.Application.invalidAPIPath(path)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                           controllers.Assets.at(path="/public", file)

