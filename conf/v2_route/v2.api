### NoDocs ###
GET     /snapshot/challenge/:challengeId/record     @org.maproulette.controllers.api.SnapshotController.recordChallengeSnapshot(challengeId:Long)
### NoDocs ###
GET     /snapshot/challenge/:challengeId/list       @org.maproulette.controllers.api.SnapshotController.getChallengeSnapshotList(challengeId:Long, includeAllData:Boolean ?= false)
### NoDocs ###
GET     /snapshot/challenge/:challengeId/export     @org.maproulette.controllers.api.SnapshotController.exportChallengeSnapshots(challengeId:Long)
### NoDocs ###
GET     /snapshot/:snapshotId                       @org.maproulette.controllers.api.SnapshotController.getChallengeSnapshot(snapshotId:Long)
###
# tags: [ Bundle ]
# summary: Create a task bundle
# consumes: [ application/json ]
# produces: [ application/json ]
# description: Create a new task bundle with the task ids in the supplied JSON body.
# responses:
#   '200':
#     description: The newly created bundle with a unique id.
#     schema:
#       $ref: '#/definitions/TaskBundle'
#   '401':
#     description: The user is not authorized to make this request
# parameters:
#   - name: apiKey
#     in: header
#     description: The user's apiKey to authorize the request
#     required: true
#     type: string
#   - name: body
#     in: body
#     description: The JSON structure for the bundle body.
#     required: true
#     schema:
#       $ref: '#/definitions/TaskBundle'
###
POST    /taskBundle                                 @org.maproulette.controllers.api.TaskBundleController.createTaskBundle
### NoDocs ###
GET     /taskBundle/:id                             @org.maproulette.controllers.api.TaskBundleController.getTaskBundle(id:Long)
### NoDocs ###
DELETE     /taskBundle/:id                          @org.maproulette.controllers.api.TaskBundleController.deleteTaskBundle(id:Long, primaryId:Option[Long])
### NoDocs ###
GET        /taskBundle/:id/unbundle                 @org.maproulette.controllers.api.TaskBundleController.unbundleTasks(id:Long, taskIds:List[Long])
### NoDocs ###
POST    /*path                                      @org.maproulette.controllers.api.APIController.invalidAPIPath(path)
### NoDocs ###
PUT     /*path                                      @org.maproulette.controllers.api.APIController.invalidAPIPath(path)
### NoDocs ###
GET     /*path                                      @org.maproulette.controllers.api.APIController.invalidAPIPath(path)
### NoDocs ###
DELETE  /*path                                      @org.maproulette.controllers.api.APIController.invalidAPIPath(path)
### NoDocs ###
HEAD    /*path                                      @org.maproulette.controllers.api.APIController.invalidAPIPath(path)
