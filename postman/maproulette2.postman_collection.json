{
	"info": {
		"_postman_id": "3a3eb254-8b59-43f0-b21a-5b82eff18cf1",
		"name": "maproulette2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "challenge",
			"item": [
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"id": "fe324c8b-540d-44de-b6bc-8851774e853c"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5c6074c-d9fb-4ebd-9a64-b7f3c26d1e68",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID2\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject2\";",
									"tests[\"description\"] = jsonData.description === \"Test project just to test moving challenges.\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject2\",\n    \"description\":\"Test project just to test moving challenges.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c86bfac1-c22a-47c4-9cf8-045f19e409d4",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple challenge\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Move",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b30ed015-3add-4b7d-bf8a-0bd2e8f0e5fd",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"parent\"] = jsonData.parent == postman.getGlobalVariable(\"SimpleProjectID2\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}/project/{{SimpleProjectID2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}",
								"project",
								"{{SimpleProjectID2}}"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "a59fb6ad-082a-4a6b-8e03-3132634109a6"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Retrieved Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78d5af0f-a4e4-4004-8d48-6ba82f2df346",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge\";",
									"tests[\"deleted\"] = jsonData.deleted === true;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Immediate Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "38f216f9-fe84-4d16-9893-c7242e0c6ae4"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6fd875a-d99b-4649-995d-9311cd7dd66e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TagsChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and two tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple tag challenge\",\n    \"enabled\":false,\n    \"tags\":\"tag1,tag2\",\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b1cb346-71c5-48e7-81c4-90466d1b5451",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7b91282-728f-4bf8-bab0-4b0a816d3037",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"postman.setGlobalVariable(\"TagsChallengeTask1ID\", jsonData[0].id);",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";",
									"postman.setGlobalVariable(\"TagsChallengeTask2ID\", jsonData[1].id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Random Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57083094-5a92-458e-921b-8c901c8623a1",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"if (jsonData[0].name == \"Task 1\") {",
									"    var id = pm.globals.get(\"TagsChallengeTask1ID\");    ",
									"} else {",
									"    var id = pm.globals.get(\"TagsChallengeTask2ID\");",
									"}",
									"tests[\"IDValidation\"] = jsonData[0].id == id;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks/random",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks",
								"random"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Next Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e642de3c-aef3-44f0-b814-2b5fcdcd3bca",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Task 2\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/nextTask/{{TagsChallengeTask1ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"nextTask",
								"{{TagsChallengeTask1ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Previous Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7afaf5c8-6542-4444-adb9-0af3f8717eb1",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Task 1\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/previousTask/{{TagsChallengeTask2ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"previousTask",
								"{{TagsChallengeTask2ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks Batch Upload",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "956934c3-6879-4574-ace8-2a268c9b0cd7",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Task 3\",\n        \"description\":\"Task 3 description\",\n        \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n    },\n    {\n        \"name\":\"Task 4\",\n        \"description\":\"Task 4 description\",\n        \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[93,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[93.1,1.6]},\"properties\":{}}]}\n    }\n]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Batch Upload two tasks to the challenge"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks Take 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";",
									"tests[\"Task3\"] = jsonData[2].name === \"Task 3\";",
									"tests[\"Task4\"] = jsonData[3].name === \"Task 4\";"
								],
								"id": "36d98e5a-2f6e-48d2-8d27-f092c26a55df"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Nearby Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f94c082-91f8-4cdb-aac8-da6fa6eb5cd8",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Task 2\");",
									"    pm.expect(pm.response.text()).to.include(\"Task 3\");",
									"    pm.expect(pm.response.text()).to.not.include(\"Task 4\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasksNearby/{{TagsChallengeTask1ID}}?limit=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasksNearby",
								"{{TagsChallengeTask1ID}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge GetTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24d28709-d691-4c88-9a91-be2c7fc92c07",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tag1\"] = jsonData[0].name === \"tag1\" || jsonData[0].name === \"tag2\"",
									"tests[\"tag2\"] = jsonData[1].name === \"tag2\" || jsonData[1].name === \"tag1\""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge DisassociateTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 204\"] = responseCode.code === 204;"
								],
								"id": "fb4dbeaf-cf27-4e8b-b787-3b8ae2f66e91"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags?tags=tag1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							],
							"query": [
								{
									"key": "tags",
									"value": "tag1"
								}
							]
						},
						"description": "Disassociates the tags from the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge GetTags afterDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tag1\"] = jsonData[0].name === \"tag2\""
								],
								"id": "8b150ba1-33a2-4c4f-9c84-168f93fc1cdf"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tags"
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f833dfc4-9317-47d5-a1ca-25231524b1c5",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"Updated challenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Updated challenge description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Updates the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "TagChallenge Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "7bfc0f85-8ba5-41e7-83c1-e3fc2d42a5dd"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the Tag challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Task Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae37f9a2-e1d3-4830-9b88-e1135efffec1",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TagsTaskChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TaskTagsChallenge\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TaskTagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and task tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple task tag challenge\",\n    \"enabled\":false,\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]},\n            \"tags\":\"taskTag1,taskTag2\"\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]},\n            \"tags\":\"taskTag3\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Task Get Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df8cde83-ff73-4376-8948-7ae4a8e9e701",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"tasktag1\");",
									"    pm.expect(pm.response.text()).to.include(\"tasktag2\");",
									"    pm.expect(pm.response.text()).to.include(\"tasktag3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/keywords?tagType=tasks&limit=1000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keywords"
							],
							"query": [
								{
									"key": "tagType",
									"value": "tasks"
								},
								{
									"key": "limit",
									"value": "1000"
								}
							]
						},
						"description": "Gets the tags for a challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Task Tag Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b654b14-f564-43f3-9930-ef1355852b81",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsTaskChallengeID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsTaskChallengeID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the Tag challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "60f818a0-e9a3-4e31-8f31-59c3bc49e43c"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				},
				{
					"name": "Challenge Project 2 Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "7ef2e53d-2f5d-4bd5-8090-ddd5ff989ff7"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID2}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID2}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "task",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"id": "d238187c-bd4a-4894-bec5-87ca4ec95a53"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec7300c5-1d5c-4435-aeeb-0b8adcf4a9fa",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestChallenge\",\n    \"parent\": {{TestProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test1\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\", \"version\": 1}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Tasks in Bounding Box",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e178ba3b-1a2d-4a75-9335-b4917b3b8834",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Task 1\");",
									"    pm.expect(pm.response.text()).to.include(\"Task 2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"taskPropertySearch\": {\n\t\t\"operationType\": \"or\",\n\t\t\"left\": {\n\t\t\t\"key\": \"id\",\n\t\t\t\"value\": \"test1\",\n\t\t\t\"valueType\": \"string\",\n\t\t\t\"searchType\": \"equals\"\n\t\t},\n\t\t\"right\": {\n\t\t\t\"operationType\": \"and\",\n\t\t\t\"left\": {\n\t\t\t\t\"key\": \"id\",\n\t\t\t\t\"value\": \"test2\",\n\t\t\t\t\"valueType\": \"string\",\n\t\t\t\t\"searchType\": \"contains\"\n\t\t\t},\n\t\t\t\"right\": {\n\t\t\t\t\"key\": \"version\",\n\t\t\t\t\"value\": \"0\",\n\t\t\t\t\"valueType\": \"number\",\n\t\t\t\t\"searchType\": \"greater_than\"\n\t\t\t}\n\t\t}\n\t}\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/box/-180/-90/180/90?cid={{TestChallenge}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"box",
								"-180",
								"-90",
								"180",
								"90"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Bulk Change Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76d42db5-e625-4d82-ade8-ef8a2f63359f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"taskPropertySearch\": {\n\t\t\"operationType\": \"or\",\n\t\t\"left\": {\n\t\t\t\"key\": \"id\",\n\t\t\t\"value\": \"test1\",\n\t\t\t\"valueType\": \"string\",\n\t\t\t\"searchType\": \"equals\"\n\t\t},\n\t\t\"right\": {\n\t\t\t\"operationType\": \"and\",\n\t\t\t\"left\": {\n\t\t\t\t\"key\": \"id\",\n\t\t\t\t\"value\": \"test2\",\n\t\t\t\t\"valueType\": \"string\",\n\t\t\t\t\"searchType\": \"contains\"\n\t\t\t},\n\t\t\t\"right\": {\n\t\t\t\t\"key\": \"version\",\n\t\t\t\t\"value\": \"0\",\n\t\t\t\t\"valueType\": \"number\",\n\t\t\t\t\"searchType\": \"greater_than\"\n\t\t\t}\n\t\t}\n\t}\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/changeStatus?cid={{TestChallenge}}&tbb=-180,-90,180,90&newStatus=2&tStatus=-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"changeStatus"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "tbb",
									"value": "-180,-90,180,90"
								},
								{
									"key": "newStatus",
									"value": "2"
								},
								{
									"key": "tStatus",
									"value": "-1"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Delete All Task Challenges",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25715c12-1e01-42c0-ad6a-55eb7cc0333c",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TestChallenge}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TestChallenge}}",
								"tasks"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Check Tasks Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54dee9fc-cd3e-4a4c-ac64-48b172e021a7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TestChallenge}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TestChallenge}}",
								"tasks"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "afcc3d5e-330a-43af-8396-9de2f7d4d50b"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "5c1c62c0-045f-4ada-9b03-ae293c20ca43"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Start Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0231f781-cf76-499d-b44f-6d07c3d9e566",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Refresh Task Lock",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "048ef65c-1bfd-429c-ae7e-ee6db43f1421",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14b3bf11-ba10-4626-a0c0-ded5868087c8",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask Tags - Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f0d0a42-1b08-4f81-a6a1-12823c411d37",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\"newupdatetasktag\", \"taskTag2\"]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask - No Tags (remain unchanged)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9185f21f-ae7b-4da5-8856-3afaa92befaf",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE2\";",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c18773ba-b371-433c-abdc-4426a3e6982c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tagname1\"] = jsonData[0].name === \"newupdatetasktag\" || jsonData[0].name === \"tasktag2\";",
									"tests[\"tagname2\"] = jsonData[1].name === \"newupdatetasktag\" || jsonData[1].name === \"tasktag2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"tags"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "UpdateTask - Delete all Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6606bbee-477d-4dee-a1a2-e707f8daa2f6",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE2\";",
									"tests[\"tags\"] = jsonData.tags.length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task Tags Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23f30beb-91de-494d-8ddd-a3a9b4a2c386",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tagname1\"] = jsonData[0].name === \"newupdatetasktag\" || jsonData[0].name === \"tasktag2\";",
									"tests[\"tagname2\"] = jsonData[1].name === \"newupdatetasktag\" || jsonData[1].name === \"tasktag2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"tags"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Add 1st Task Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewComment\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"comment\"] = jsonData.comment === \"This is a comment\";"
								],
								"id": "7fe29d51-f26d-4934-8002-03e8297febe8"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment?comment=This%20is%20a%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Update 1st Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"comment\"] = jsonData.comment === \"This is an updated comment\";"
								],
								"id": "4378904e-1cf8-4ad5-a15e-ec2366850e47"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/comment/{{NewComment}}?comment=This%20is%20an%20updated%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"comment",
								"{{NewComment}}"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20an%20updated%20comment"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Add 2nd Task Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"comment\"] = jsonData.comment === \"This is a comment Number2\";"
								],
								"id": "41b491ce-58ac-4dd4-853e-95fac22efaa9"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment?comment=This%20is%20a%20comment%20Number2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment%20Number2"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Retrieve Single Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"comment\"] = jsonData.comment === \"This is an updated comment\";"
								],
								"id": "4a1330e4-7f6e-4c1f-99df-c556cad8c130"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/comment/{{NewComment}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"comment",
								"{{NewComment}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Retrieve All Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Comment1\"] = jsonData.length == 2;"
								],
								"id": "a25b737b-f8ef-440c-aa4f-6ab2b890982b"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comments"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"id": "a36a7c1d-aeba-4bfc-a45b-07c926a3a4ec"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/comment/{{NewComment}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"comment",
								"{{NewComment}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Release Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae5f7ce7-fb05-4de0-9a1f-eb48fdfff987",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction UPDATE\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instruction\":\"NewTask instruction UPDATE\",\n    \"tags\": \"newupdatetasktag\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task withTags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10ca121d-2b5f-471f-9dec-abd0c6002a43",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask With Tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask With Tags\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]},\n    \"tags\":\"newtaskTag1, newtaskTag2\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Task Tags Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "002947fb-88d2-48e0-9a03-259644a1ee6e",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"newtasktag1\");",
									"    pm.expect(pm.response.text()).to.include(\"newtasktag2\");",
									"    pm.expect(pm.response.text()).to.include(\"newupdatetasktag\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/keywords?tagType=tasks&limit=1000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keywords"
							],
							"query": [
								{
									"key": "tagType",
									"value": "tasks"
								},
								{
									"key": "limit",
									"value": "1000"
								}
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Task Tags Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d1a124f-b2f8-401d-a427-b42275743a6a",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sometag1\");",
									"    pm.expect(pm.response.text()).to.include(\"sometag2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/tags/update?tags=sometag1,sometag2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"tags",
								"update"
							],
							"query": [
								{
									"key": "tags",
									"value": "sometag1,sometag2"
								}
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Read Task Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89de62ef-b21d-44ac-b91e-08d0b58063d1",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sometag1\");",
									"    pm.expect(pm.response.text()).to.include(\"sometag2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"tags"
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "e7e58683-aa44-4f36-bdf0-a54f5b5ffece"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "TaskReview",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"id": "eebbdfc3-203b-4920-b455-a72dd8a13454"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "585b096d-b8e6-4318-a05f-4e9c30b0241b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestChallenge\",\n    \"parent\": {{TestProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test1\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\", \"version\": 1}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Create new Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask instruction\";"
								],
								"id": "d7387ffe-b0d8-4868-a44d-8b61e2549c40"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask\",\n    \"parent\": {{TestChallenge}},\n    \"instruction\":\"NewTask instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "SetTaskStatus w/review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17e94870-eebd-4609-a740-b0576cac9b67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/1?requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"1"
							],
							"query": [
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cda272e-2bbf-41b6-b9fe-6b66baa13d63",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"status\"] = jsonData.status === 1;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 0;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Review Requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5131ae29-4b45-4163-b9da-9576c9436b43",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"no tasks to be returned\"] = jsonData.total === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/review?cid={{TestChallenge}}&trStatus=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"review"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "0"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "SetTaskReviewStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6614ede-3216-4e99-95f6-f0d75de6926c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}/review/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}",
								"review",
								"1"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Read Task After Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6cc4c3b-53a9-48e3-a0cf-7083c017c44f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask\";",
									"tests[\"status\"] = jsonData.status === 1;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 1;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask}}"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b9b70c1-2f57-446f-99e0-e0391b346275",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"no tasks to be returned\"] = jsonData.total === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&trStatus=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "1"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Fetch Reviews (inverted)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3931551-e14b-44d8-831d-e95a623deccb",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one tasks to be returned\"] = jsonData.total === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tasks/reviewed?cid={{TestChallenge}}&trStatus=1&invf=trStatus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tasks",
								"reviewed"
							],
							"query": [
								{
									"key": "cid",
									"value": "{{TestChallenge}}"
								},
								{
									"key": "trStatus",
									"value": "1"
								},
								{
									"key": "invf",
									"value": "trStatus"
								}
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "e386e2a2-c5ec-48ca-9249-8c8214be574c"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VirtualChallenge",
			"item": [
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02856af5-28e1-4485-9a41-4f76966d8d66",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ee4ddaf-152e-4cef-8d24-abd3ae8925db",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"TagsChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TagsChallenge\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge and two tags\",\n    \"parent\":{{SimpleProjectID}},\n    \"instruction\":\"Instruction for the simple tag challenge\",\n    \"enabled\":false,\n    \"tags\":\"tag1,tag2\",\n    \"children\": [\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options and a couple of tags in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fea9385a-13e1-4f0a-8d67-ce6a205d4eb3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"TagsChallenge\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge and two tags\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple tag challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Task1\"] = jsonData[0].name === \"Task 1\";",
									"tests[\"Task2\"] = jsonData[1].name === \"Task 2\";"
								],
								"id": "a0153776-d35f-4954-86ac-86fcef6b0298"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{TagsChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{TagsChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d9c502b-ade9-4b0d-8075-1727687f884d",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"test\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"location\": {\n      \"left\":102,\n      \"bottom\":0,\n      \"right\":104,\n      \"top\":2\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2dd10d56-da72-46c4-9077-5a4dcb2c895d",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Read By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08d1c0a0-9b35-43a6-96fd-3535325dfcd1",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallengebyname/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallengebyname",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ce2baed-f910-4711-acb9-8c651ba0b2df",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"testUpdate\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"testUpdate\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f894d29-09dc-4b79-bec7-6fb8efd2c841",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData[0].name === \"testUpdate\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Task List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87e64f2b-8522-4d07-9933-88b1b08116d5",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"size\"] = jsonData.length === 2;",
									"pm.globals.set(\"VChallengeTask1ID\", jsonData[0].id);",
									"pm.globals.set(\"VChallengeTask2ID\", jsonData[1].id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Random Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8ff007d-2380-4e72-97e7-fa505d8269d5",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Next Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5ebb382-45f1-43eb-a6c7-831c88e9f0ad",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"id\"] = jsonData.id == pm.globals.get(\"VChallengeTask2ID\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/nextTask/{{VChallengeTask1ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"nextTask",
								"{{VChallengeTask1ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Previous Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd2a870c-f77a-4d89-901d-6e22d3f69c1d",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"id\"] = jsonData.id == pm.globals.get(\"VChallengeTask1ID\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/previousTask/{{VChallengeTask2ID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"previousTask",
								"{{VChallengeTask2ID}}"
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Nearby Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10dae998-15dc-4bdd-816f-b6999ea44361",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Nearby Task 1\"] = jsonData.length > 0 && (jsonData[0].name === \"Task 1\" || jsonData[0].name === \"Task 2\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}/tasksNearby/{{VChallengeTask2ID}}?limit=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}",
								"tasksNearby",
								"{{VChallengeTask2ID}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "Gets the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Virtual Challenge GeoJSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc97d0dc-d141-415c-bd78-638a4d23444a",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/view/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"view",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Clustered Points",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19348fea-f381-45f6-b0d8-9f219879968f",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/clustered/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"clustered",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b91327b8-9398-4340-99ef-bad5572e7df1",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation ID List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e39cda87-e184-4aea-8b07-f386aed0bd33",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeIDList\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"testVCList\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"testVCList\",\n  \"taskIdList\":[{{VChallengeTask1ID}}, {{VChallengeTask2ID}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge ID Task List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4039a91e-224d-4cc0-8390-4fc9bff6a960",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"size\"] = jsonData.length === 2;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeIDList}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeIDList}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Delete ID List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f41d8e03-dfc7-4aa3-9044-9d756f4dac2f",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/{{VirtualChallengeIDList}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"{{VirtualChallengeIDList}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation Expiry",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c7d273b-ea78-4968-92c5-30551b9f77cc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"test\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"test\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"location\": {\n      \"left\":102,\n      \"bottom\":0,\n      \"right\":104,\n      \"top\":2\n    }\n  },\n  \"expiry\":\"1 s\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Expiry Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c65793c-97f6-4ef9-ab96-513c7ad8a079",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 404\"] = responseCode.code === 404;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Challenge Creation w/Boundings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68ab666c-5b0e-4f99-a13a-58dc6089f706",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.globals.set(\"VirtualChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"testBoundingGeos1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"testBoundingGeos1\",\n  \"searchParameters\":{\n    \"challengeIds\": [ {{TagsChallengeID}} ],\n    \"boundingGeometries\": [\n    \t{\"bounding\": {\n    \t\t\"type\":\"Polygon\",\n    \t\t\"coordinates\":[[[100,0],[100,3],[105,3],[105,0],[100,0]]]\n    \t}},\n    \t{\"bounding\": {\n    \t\t\"type\":\"Polygon\",\n    \t\t\"coordinates\":[[[1,1],[1,2],[2,2],[2,1],[1,1]]]\n    \t}}\n    ]\n  }\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/virtualchallenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"virtualchallenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "79e8ad70-cb2a-44bf-b65c-e2f1fba1334c"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "data",
			"item": [
				{
					"name": "ChallengeSummary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/challenge/8953?priority=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"challenge",
								"8953"
							],
							"query": [
								{
									"key": "priority",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "project",
			"item": [
				{
					"name": "Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46075d9a-e77b-4fdf-8100-98c35d18ac2b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Project Creation With Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83697fd8-7afc-45bf-8dc2-bc36322896fb",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"ProjectWithChildren\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"ProjectWithChildren\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing 2 children.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"ProjectWithChildren\",\n    \"description\":\"Test project containing 2 children.\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Project Children Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97d38f49-051e-461f-99a4-d8e69ec918cf",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \t\"parent\": {{ProjectWithChildren}},\n        \"name\":\"Challenge1 Child\",\n        \"description\":\"Challenge1 Child description\",\n        \"instruction\":\"Challenge1 Child instruction\",\n        \"children\":[\n            {\n                \"name\":\"Task 1\",\n                \"description\":\"Task 1 description\",\n                \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n            },\n            {\n                \"name\":\"Task 2\",\n                \"description\":\"Task 2 description\",\n                \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n            }\n        ]\n    },\n    {\n    \t\"parent\": {{ProjectWithChildren}},\n        \"name\":\"Challenge2 Child\",\n        \"description\":\"Challenge2 Child description\",\n        \"instruction\":\"Challenge2 Child instruction\"\n    }\n]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenges"
							]
						},
						"description": "Creates a project with two children within the same request."
					},
					"response": []
				},
				{
					"name": "Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df8bf6bf-6809-412d-aec5-5e3a62258865",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Expected Children count\"] = jsonData.length === 0"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Children 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b70c815c-cd62-427d-882f-e25a3d1ec983",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Expected Children count\"] = jsonData.length === 2",
									"tests[\"name\"] = jsonData[0].name === \"Challenge1 Child\" || jsonData[0].name === \"Challenge2 Child\";",
									"tests[\"description\"] = jsonData[0].description === \"Challenge1 Child description\" || jsonData[0].description === \"Challenge2 Child description\";",
									"tests[\"instruction\"] = jsonData[0].instruction === \"Challenge1 Child instruction\" || jsonData[0].instruction === \"Challenge2 Child instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Random Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "984a1f92-c40f-4140-b972-c35a69d698a7",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"jsonData[0].name === \"Task 2\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}/tasks?cs=1&ts=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}",
								"tasks"
							],
							"query": [
								{
									"key": "cs",
									"value": "1"
								},
								{
									"key": "ts",
									"value": "2"
								}
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Clustered Points",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebe56beb-e81f-4bbf-9dcc-2e6b63edcc8f",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/search/clustered?search=%7B%22challengeSearch%22%3A%22Challenge2%22%7D&limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"search",
								"clustered"
							],
							"query": [
								{
									"key": "search",
									"value": "%7B%22challengeSearch%22%3A%22Challenge2%22%7D"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project With Children Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "828e5280-acf5-462e-8149-64342f7ae08d"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{ProjectWithChildren}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{ProjectWithChildren}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project just created with the children"
					},
					"response": []
				},
				{
					"name": "Project Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "7a1de0a9-8437-4e6e-a297-9b6379df983b"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"Test project containing all children used for api testing. (Update)\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							]
						},
						"description": "Updates the project description"
					},
					"response": []
				},
				{
					"name": "Project Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "35b96350-e9e1-4814-9045-6d309fbe8432"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "Project List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d078d30-fe22-4b06-a1d9-260524b3e2b0",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Total projects should be greater than 0\"] = jsonData.length > 0"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects?limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Lists all the projects in the system"
					},
					"response": []
				},
				{
					"name": "Project Find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Body matches name\"] = responseBody.has(\"SimpleProject\");",
									"tests[\"Body matches description\"] = responseBody.has(\"Test project containing all children used for api testing. (Update)\");"
								],
								"id": "849a106b-b9fc-4257-bc76-089b4cae1004"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects/find?q=SimpleProject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects",
								"find"
							],
							"query": [
								{
									"key": "q",
									"value": "SimpleProject"
								}
							]
						},
						"description": "Find the APITestProject in the system."
					},
					"response": []
				},
				{
					"name": "Project By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing. (Update)\";"
								],
								"id": "e3c97d99-1325-49e9-a01c-c7679009b298"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projectByName/SimpleProject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projectByName",
								"SimpleProject"
							]
						},
						"description": "Retrieve the project by the provided name"
					},
					"response": []
				},
				{
					"name": "Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "d99af622-1779-4bfb-b236-71899ef680d5"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VirtualProject",
			"item": [
				{
					"name": "Virtual Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b307d049-b109-4d7f-951d-759efcb78c05",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"VPProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"VPProject\";",
									"tests[\"description\"] = jsonData.description === \"Test virtual project for api testing.\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"VPProject\",\n    \"description\":\"Test virtual project for api testing.\",\n    \"enabled\":true,\n    \"isVirtual\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4a9b3c4-48b7-4dba-b610-0a6964ed478e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject1\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject1\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0421bbcb-f6e3-4f93-9e7f-ce8334413144",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleChallenge1\";",
									"tests[\"description\"] = jsonData.description === \"A simple challenge containing only the basic elements for a challenge\";",
									"tests[\"instruction\"] = jsonData.instruction === \"Instruction for the simple challenge\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleChallenge1\",\n    \"description\":\"A simple challenge containing only the basic elements for a challenge\",\n    \"parent\":{{SimpleProjectID1}},\n    \"instruction\":\"Instruction for the simple challenge\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "VP Challenge Add",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f210d7d-9a2f-41a3-b207-669661084666",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenge/{{SimpleChallengeID1}}/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenge",
								"{{SimpleChallengeID1}}",
								"add"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Project List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7ed228b-9acd-4661-95d4-4ca07fc03c8d",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Body matches name\"] = responseBody.has(\"VPProject\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/projects?limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"projects"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Lists all the projects in the system"
					},
					"response": []
				},
				{
					"name": "VP Project Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fce37bea-b698-4617-8f21-d92341939495",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"VPProject\";",
									"tests[\"isVirtual\"] = jsonData.isVirtual === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}"
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "432cb8d9-bd76-4063-95ba-32ba520acec9",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData[0].name === \"SimpleChallenge1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "VP Project Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa4fcf8c-016b-4ef6-ae2f-6da6d87397f4",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/project/summary?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"project",
								"summary"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": [
						{
							"name": "VP Project Summary",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apiKey",
										"value": "test"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:9000/api/v2/data/project/summary?projectList={{VPProjectID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9000",
									"path": [
										"api",
										"v2",
										"data",
										"project",
										"summary"
									],
									"query": [
										{
											"key": "projectList",
											"value": "{{VPProjectID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Accept-Encoding,Origin"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Date",
									"value": "Thu, 23 May 2019 15:01:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "28"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "VP Project Leaderboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fa62eb6-0067-4dc6-b901-9269a41f6a5a",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/user/leaderboard?projectIds={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"user",
								"leaderboard"
							],
							"query": [
								{
									"key": "projectIds",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4316d0b5-02fe-4880-a820-3ce252b5c76e",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/project/activity?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"project",
								"activity"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project User Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f6e0f6b-befb-4280-ae31-7891ebd93803",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/user/summary?projectList={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"user",
								"summary"
							],
							"query": [
								{
									"key": "projectList",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Project Raw Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f69d33b-e675-4a4b-850d-9dfdb6af305f",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"[]\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/data/raw/activity?projectIds={{VPProjectID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"data",
								"raw",
								"activity"
							],
							"query": [
								{
									"key": "projectIds",
									"value": "{{VPProjectID}}"
								}
							]
						},
						"description": "Gets the project from the supplied ID. Will need to modify the ID based on the ID returned from the creation API."
					},
					"response": []
				},
				{
					"name": "VP Challenge Remove",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41815074-9960-46c4-9c4f-cd48d027e5f0",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}/challenge/{{SimpleChallengeID1}}/remove",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}",
								"challenge",
								"{{SimpleChallengeID1}}",
								"remove"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Project Children",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "646639fb-6937-4d6f-823e-d21bb5762c4c",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData[0].name === \"SimpleChallenge1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID1}}/challenges",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID1}}",
								"challenges"
							]
						},
						"description": "Gets the children of the project"
					},
					"response": []
				},
				{
					"name": "Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05722fe1-7d42-4686-9d82-e01d4c701028",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID1}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID1}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				},
				{
					"name": "VP Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0f09b21-c238-401c-9a2a-1a8c8d88437f",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{VPProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{VPProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project created by the project creation. Would need to modify the supplied ID."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tag",
			"item": [
				{
					"name": "Tag Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a3ec0ae-d699-4823-9253-24e4d3f94ac9",
								"exec": [
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestTagID\", jsonData.id);",
									"tests[\"name\"] = jsonData.name === \"testtag1\";",
									"tests[\"description\"] = jsonData.description === \"TestTag1 description\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tagType\":\"challenges\",\n    \"name\":\"TestTag1\",\n    \"description\":\"TestTag1 description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/keyword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"keyword"
							]
						},
						"description": "Creates a basic tag"
					},
					"response": []
				},
				{
					"name": "Tag Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"testtag1\";",
									"tests[\"description\"] = jsonData.description === \"TestTag1 description\";"
								],
								"id": "5bfb6cc3-7f07-4049-b8b5-da74d4ce0e91"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Gets the tag"
					},
					"response": []
				},
				{
					"name": "Tag Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name\"] = jsonData.name === \"updatedtesttag1\";",
									"tests[\"description\"] = jsonData.description === \"Updated Tag description\";"
								],
								"id": "a5a9ea56-ba34-4c12-9c77-d03c318f5b0f"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"UpdatedTestTag1\",\n    \"description\":\"Updated Tag description\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Updates a basic tag"
					},
					"response": []
				},
				{
					"name": "Tag Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"status\"] = jsonData.status === \"OK\";"
								],
								"id": "f301e927-ec5c-4168-ae31-9fcc665dc108"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/tag/{{TestTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"tag",
								"{{TestTagID}}"
							]
						},
						"description": "Deletes the tag"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Get Super User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5731fd87-accd-44e9-ac5d-eea87c407701",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id\"] = jsonData.id === -999;",
									"tests[\"test1\"] = jsonData.properties.test1 === \"value1\";",
									"tests[\"test2\"] = jsonData.properties.test2 === 8975;",
									"tests[\"test3\"] = jsonData.properties.test3 === true;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"properties\": {\n\t\t\"test1\":\"value1\",\n\t\t\"test2\":8975,\n\t\t\"test3\":true\n\t}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/user/-999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"user",
								"-999"
							]
						},
						"description": "Gets the super user that is automatically created with the system."
					},
					"response": []
				},
				{
					"name": "Get OSM Super User ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a75194e4-1b86-45b3-b986-834a0d4d3ec8",
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id\"] = jsonData.id === -999;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/osmuser/SuperUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"osmuser",
								"SuperUser"
							]
						},
						"description": "Gets the super user that is automatically created with the system by using the super user mocked OSM name."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Following",
			"item": [
				{
					"name": "Get Following",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45cc787f-6d64-44da-85fe-6981931f3d92",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty\"] = jsonData.id === [];"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/user/-999/following",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"user",
								"-999",
								"following"
							]
						},
						"description": "Gets the users the super user is following"
					},
					"response": []
				},
				{
					"name": "Get Followers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b1dee5f-5fba-4e01-ae64-92ce8441bf66",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty\"] = jsonData.id === [];"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/user/-999/followers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"user",
								"-999",
								"followers"
							]
						},
						"description": "Gets the users following the super user"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e7949563-99b6-4eaf-9d16-1a48dcbfbfbd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c8c7c56d-4251-4eac-8446-f616e8f09c17",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CooperativeWork",
			"item": [
				{
					"name": "testChange Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "edb8ce98-2b6d-4709-a371-e68a85e08ca9",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"12345\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"WAY\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"testit\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lanes\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "apiKey",
								"value": "test",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\n  \"osmId\":12345,\n  \"osmType\":\"WAY\",\n  \"updates\":{\"lanes\": \"3\", \"testit\": \"yes\"},\n  \"deletes\":[\"oneway\"]\n}]"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/change/tag/test?changeType=delta",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"change",
								"tag",
								"test"
							],
							"query": [
								{
									"key": "changeType",
									"value": "delta"
								}
							]
						},
						"description": "testing a sample cooperative change"
					},
					"response": []
				},
				{
					"name": "Challenge Project Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleProjectID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SimpleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project containing all children used for api testing.\";"
								],
								"id": "6a150183-d8b8-4df3-b189-d9d302f0b972"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SimpleProject\",\n    \"description\":\"Test project containing all children used for api testing.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a base project for all the other Map Roulette API Testing"
					},
					"response": []
				},
				{
					"name": "Challenge Creation with Top-Level SF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7c911a0-4b91-46cc-9232-aca9b4ccab33",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SFChallenge\";",
									"tests[\"cooperativeType\"] = jsonData.cooperativeType === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SFChallenge\",\n    \"parent\": {{SimpleProjectID}},\n    \"description\":\"SFChallenge description\",\n    \"instruction\":\"SFChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"SF Task 1\",\n\t        \"cooperativeWork\":  {\n\t        \t\"meta\": {\n\t        \t  \"version\": 1\n\t        \t},\n        \t\t\"osmId\": 243499890,\n    \t\t\t\"osmType\": \"way\",\n        \t\t\"update\": {\n            \t\t\"tags\": {\n                \t\t\"update\": [{\"name\":\"building\", \"value\":\"yes\"}],            \n                \t\t\"delete\": [{\"name\":\"bldg\", \"ifUnused\":\"true\"}]\n        \t\t\t}\n    \t\t\t}\n    \t\t},\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\", \"building\": \"ok\", \"bldg\":\"y\"\n            }},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        }               \n    ]\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Creation with Embedded SF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5024368-2dd5-4d77-915b-5099f4d4a50f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SimpleChallengeID1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"SFEChallenge\";",
									"tests[\"cooperativeType\"] = jsonData.cooperativeType === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"SFEChallenge\",\n    \"parent\": {{SimpleProjectID}},\n    \"description\":\"SFEChallenge description\",\n    \"instruction\":\"SFEChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"SFE Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\", \"building\": \"ok\", \"bldg\":\"y\",\n            \t\"maproulette\": {\n            \t\t\"cooperativeWork\":  {\n            \t\t\t\"meta\": {\n\t        \t\t\t\t\"version\": 1\n\t        \t\t\t},\n        \t\t\t\t\"update\": {\n            \t\t\t\t\"tags\": {\n                \t\t\t\t\"update\": [{\"name\":\"building\", \"value\":\"yes\"}],            \n                \t\t\t\t\"delete\": [{\"name\":\"bldg\", \"ifUnused\":\"true\"}]\n        \t\t\t\t\t}\n        \t\t\t\t}\n    \t\t\t\t}\n            \t}\n            }},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        }               \n    ]\n}\n"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						},
						"description": "Creates the most basic challenge with the least set of options in the body json"
					},
					"response": []
				},
				{
					"name": "Challenge Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f0c46bc-ab53-4c9e-b647-0cf4647081e5",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"SFTagID\", jsonData[0].id);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = jsonData[0].name === \"SF Task 1\";",
									"postman.setGlobalVariable(\"SFChallengeTask1ID\", jsonData[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge/{{SimpleChallengeID}}/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge",
								"{{SimpleChallengeID}}",
								"tasks"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "apply tag change to task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db0407bb-ad56-4d73-a63b-422b689044c4",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "comment",
								"type": "text",
								"value": "Submitted with Postman."
							},
							{
								"key": "requestReview",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\":\"This is just a test. Please ignore.\",\n  \"changes\":[{\n\t  \"osmId\":12345,\n\t  \"osmType\":\"WAY\",\n\t  \"updates\":{\"testit\": \"yes\"},\n\t  \"deletes\":[]\n\t}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}/fix/apply?tags=automated,postman",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}",
								"fix",
								"apply"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "automated,postman"
								}
							]
						},
						"description": "testing a sample cooperative change"
					},
					"response": []
				},
				{
					"name": "Read Tag Fix Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "290a5678-6ca5-4fe0-8637-d05b49c4467a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = jsonData.name === \"SF Task 1\";",
									"tests[\"SF Task 1 status is fixed\"] = jsonData.status === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Read Tag Task MR Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d763f75e-2230-46b6-a91c-55727638e540",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"SF Task 1\"] = !!_.find(jsonData, {name: \"postman\"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{SFTagID}}/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{SFTagID}}",
								"tags"
							]
						},
						"description": "Gets the tasks of the challenge for the provided ID"
					},
					"response": []
				},
				{
					"name": "Challenge Project Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"id": "a561d72e-6335-4835-842b-5152889ea681"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{SimpleProjectID}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{SimpleProjectID}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project that was used for the challenge tests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "taskBundles",
			"item": [
				{
					"name": "Setup Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "145c6bf3-d729-40e7-84e9-fa9351ef7954",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestBundleProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestBundleProject\";",
									"tests[\"description\"] = jsonData.description === \"Test project.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestBundleProject\",\n    \"description\":\"Test project.\",\n    \"enabled\":false\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Setup Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5c33a6c-40c1-4b5d-9315-ca8b0e6ddef7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestBundleChallenge\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"TestBundleChallenge\";",
									"tests[\"description\"] = jsonData.description === \"TestChallenge description\";",
									"tests[\"instruction\"] = jsonData.instruction === \"TestChallenge instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TestBundleChallenge\",\n    \"parent\": {{TestBundleProject}},\n    \"description\":\"TestChallenge description\",\n    \"instruction\":\"TestChallenge instruction\",\n    \"children\":[\n        {\n            \"name\":\"Task 1\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{}}]}\n        },\n        {\n            \"name\":\"Task 2\",\n            \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103,1.5]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[103.1,1.6]},\"properties\":{}}]}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/challenge",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"challenge"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Task1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9379b0f2-d14d-4b6f-a869-d03fd75041bf",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask1\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask1 instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask1\",\n    \"parent\": {{TestBundleChallenge}},\n    \"instruction\":\"NewTask1 instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.1,0.6]},\"properties\":{\"id\": \"test2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[102.2,0.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Task2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc20b05e-19d4-4a40-87ee-786e6e1c19d4",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewTask2\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"NewTask2\";",
									"tests[\"instruction\"] = jsonData.instruction === \"NewTask2 instruction\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"NewTask2\",\n    \"parent\": {{TestBundleChallenge}},\n    \"instruction\":\"NewTask2 instruction\",\n    \"geometries\":{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[105.1,1.6]},\"properties\":{\"id\": \"test3\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[105.2,1.7]},\"properties\":{ \"identifier\":{\"value\":1111} }}]}\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebefc973-9b1b-400d-9ca1-43b2331ad6f7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewBundle\", jsonData.bundleId);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"New Bundle\",\n    \"taskIds\": [{{NewTask1}},{{NewTask2}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Bundle Tasks Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f68a6071-35f5-4e1f-9f43-7d553a4e133c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"NewComment\", jsonData.id);",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/comment?comment=This%20is%20a%20comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"comment"
							],
							"query": [
								{
									"key": "comment",
									"value": "This%20is%20a%20comment"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "setTaskBundleStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77619def-7485-4ef4-84f4-5d6f50189f0e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/2?primaryId={{NewTask1}}&comment=SomeComment&requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"2"
							],
							"query": [
								{
									"key": "primaryId",
									"value": "{{NewTask1}}"
								},
								{
									"key": "comment",
									"value": "SomeComment"
								},
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a438bcb6-f965-4312-a159-bec736d5cfa1",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attempt to Create Dup Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88e4b7fd-10be-49e0-9ea4-b86d31d58510",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 400\"] = responseCode.code === 400;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"New Dup Bundle\",\n    \"taskIds\": [{{NewTask1}},{{NewTask2}}]\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attempt setTaskStatus on Bundle Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8d420e5-f8a9-41ae-be6c-d2c290f6f87d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 400\"] = responseCode.code === 400;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/1?comment=SomeComment&requestReview=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"1"
							],
							"query": [
								{
									"key": "comment",
									"value": "SomeComment"
								},
								{
									"key": "requestReview",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Task Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e03a9f7f-8be1-4d62-a004-5a1085afcaa1",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 0;",
									"tests[\"reviewClaimedBy\"] = jsonData.reviewClaimedBy === -999;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}/review/start",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}",
								"review",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Other Bundle Task (after start review)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b3adbbd-12e8-411f-a0ab-4ec309704c0f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask2\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary !== true;",
									"tests[\"reviewClaimedBy\"] = jsonData.reviewClaimedBy === -999;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setBundleTaskReviewStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dce09935-e347-4c0f-a898-20997c91f1c7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/review/1?comment=SomeReviewCommet&reviewStatus=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"review",
								"1"
							],
							"query": [
								{
									"key": "comment",
									"value": "SomeReviewCommet"
								},
								{
									"key": "reviewStatus",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Task After Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec363d52-0dea-464b-b0e9-37069dfdb95d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"NewTask1\";",
									"tests[\"status\"] = jsonData.status === 2;",
									"tests[\"bundlePrimary\"] = jsonData.isBundlePrimary === true;",
									"tests[\"reviewStatus\"] = jsonData.reviewStatus === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/task/{{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"task",
								"{{NewTask1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b0ae431-1e7c-4741-9fa3-67b6df263190",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"taskStatus1\"] = jsonData.tasks[0].status === 2",
									"tests[\"taskStatus2\"] = jsonData.tasks[1].status === 2"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "unbundleTasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48361cb8-04dd-4968-836a-69a46dc0b510",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"tasksLength\"] = Object.keys(jsonData.tasks).length === 1",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}/unbundle?taskIds={{NewTask2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}",
								"unbundle"
							],
							"query": [
								{
									"key": "taskIds",
									"value": "{{NewTask2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9b2c1d3-fc0b-44d3-b367-a9f6936d3292",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/taskBundle/{{NewBundle}}?primaryId={{NewTask1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"taskBundle",
								"{{NewBundle}}"
							],
							"query": [
								{
									"key": "primaryId",
									"value": "{{NewTask1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Teardown",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afdc9e9f-79ab-4218-8ad9-cdf70fa9c4d0",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TestBundleProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TestBundleProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "teams",
			"item": [
				{
					"name": "Create Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc1cf417-3ced-4116-8a01-b27affe1fd71",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TestTeam\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"tests[\"name\"] = jsonData.name === \"Postman Team A\";",
									"tests[\"description\"] = jsonData.description === \"A test team from Postman\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test",
								"type": "text"
							},
							{
								"key": "contentType",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -1,\n  \"name\": \"Postman Team A\",\n  \"description\": \"A test team from Postman\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team"
							]
						},
						"description": "Creates a new Team"
					},
					"response": []
				},
				{
					"name": "Update Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5fd1ff4-83fd-4daf-82ff-ca89b7fe213a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"name\"] = jsonData.name === \"Team A\";",
									"tests[\"description\"] = jsonData.description === \"A test team\";"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2297ad2f-e21f-4f15-b144-a12a74088d67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{TestTeam}},\n  \"name\": \"Team A\",\n  \"description\": \"A test team\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}"
							]
						},
						"description": "Updates team fields"
					},
					"response": []
				},
				{
					"name": "Get Team Members",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "474d18e0-b9fc-4366-9094-45af445c4f53",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"result should be SuperUser\"] = jsonData[0].name === \"SuperUser\"",
									"tests[\"result should be on team\"] = jsonData[0].teamId === parseInt(pm.variables.get(\"TestTeam\"))",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/userMembers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"userMembers"
							]
						},
						"description": "Get members of team"
					},
					"response": []
				},
				{
					"name": "Create Team B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98023769-dd58-443b-a19b-f03ca8b8e132",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									"postman.setGlobalVariable(\"TestTeamB\", jsonData.id);",
									"tests[\"name\"] = jsonData.name === \"Team B\";",
									"tests[\"description\"] = jsonData.description === \"A second test team\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -1,\n  \"name\": \"Team B\",\n  \"description\": \"A second test team\",\n  \"groupType\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/team",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team"
							]
						},
						"description": "Creates another new team"
					},
					"response": []
				},
				{
					"name": "Search Teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "642298d2-1d9b-41df-ab41-ddfa4b008909",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"result should be Team A\"] = jsonData[0].name === \"Team A\"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/teams/find?name=Team A",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"teams",
								"find"
							],
							"query": [
								{
									"key": "name",
									"value": "Team A"
								}
							]
						},
						"description": "Search teams"
					},
					"response": []
				},
				{
					"name": "Create Test Project for Teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "412dbde4-ecdd-4652-8beb-2100945ad520",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"TeamProject\", jsonData.id);",
									"tests[\"response code is 201\"] = responseCode.code === 201;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"TeamProject\",\n    \"description\":\"Test project for team testing\",\n    \"enabled\":true\n}"
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project"
							]
						},
						"description": "Creates a test project for team testing"
					},
					"response": []
				},
				{
					"name": "Add Team A to Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "726ed35e-8ea2-4492-9aa0-e541a9b8ff8d",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}",
								"1"
							]
						},
						"description": "Add team A to Teams project"
					},
					"response": []
				},
				{
					"name": "Verify Team Grant on Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79809ea8-81e5-4698-b3ad-70a60c674e06",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has team grant\"] = !!_.find(",
									"    jsonData.grants,",
									"    g => g.role === 1 && g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and check the grants"
					},
					"response": []
				},
				{
					"name": "Get Teams Managing Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1c87302-4070-4751-9d33-c9a542f7980d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"one result\"] = jsonData.length === 1",
									"tests[\"is Team A\"] = jsonData[0].team.name === \"Team A\"",
									"tests[\"has grant on project\"] = jsonData[0].grants[0].target.objectId === parseInt(pm.variables.get(\"TeamProject\"))",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/teams/projectManagers/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"teams",
								"projectManagers",
								"{{TeamProject}}"
							]
						},
						"description": "Get teams managing project"
					},
					"response": []
				},
				{
					"name": "Set Team A role on Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6823c5ad-c0f3-4779-a4ca-7bc8e81354f1",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}",
								"2"
							]
						},
						"description": "Set role of Team A on project"
					},
					"response": []
				},
				{
					"name": "Verify updated Team Grant",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a6354db-c04c-49d3-adbd-9f0c96a1097d",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has team grant\"] = !!_.find(",
									"    jsonData.grants,",
									"    g => g.role === 2 && g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and check the grants for updated role"
					},
					"response": []
				},
				{
					"name": "Remove Team A from Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0daefbb3-d4fa-4bf5-b9c7-5e30e8db2ce9",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Remove team A from Teams project"
					},
					"response": []
				},
				{
					"name": "Verify team grant removed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d800edbe-43b5-452a-b03b-a6715a309f0e",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"project has no team grants\"] = !_.find(",
									"    jsonData.grants,",
									"    g => g.grantee.granteeType === 6 && g.grantee.granteeId === parseInt(pm.variables.get(\"TestTeam\"))",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							]
						},
						"description": "Get the Teams project and verify that grants to team A no longer exist"
					},
					"response": []
				},
				{
					"name": "Delete Team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1c2b113-c2b0-4da2-811f-ca6f7e6126cd",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeam}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeam}}"
							]
						},
						"description": "Deletes team A"
					},
					"response": []
				},
				{
					"name": "Delete Team B",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "525cbd66-bc93-41e3-9d38-4adc89ddca2e",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"type": "text",
								"value": "test"
							},
							{
								"key": "contentType",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9000/api/v2/team/{{TestTeamB}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"team",
								"{{TestTeamB}}"
							]
						},
						"description": "Deletes team B"
					},
					"response": []
				},
				{
					"name": "Delete Teams Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2c36863-1de7-4d3b-8b53-14d910907f7f",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status\"] = jsonData.status === \"OK\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apiKey",
								"value": "test"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9000/api/v2/project/{{TeamProject}}?immediate=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"api",
								"v2",
								"project",
								"{{TeamProject}}"
							],
							"query": [
								{
									"key": "immediate",
									"value": "true"
								}
							]
						},
						"description": "Deletes the project for teams testing"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}